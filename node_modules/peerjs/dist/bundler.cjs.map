{"mappings":";;;;;;;;;;;;;;;;;;;ACAA;ACAA;AAEO,MAAM,yCAAQ,GAAG,IAAK;IAC5B,AAAS,KAAK,GAAG;QAAC,MAAM;QAAE,QAAQ;QAAE,MAAM;KAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACzE,AAAS,iBAAiB,GAAG;QAAC,SAAS;QAAE,QAAQ;QAAE,QAAQ;KAAC,CAAC;IAE7D,AAAS,iBAAiB,GAAG,EAAE,CAAC;IAChC,AAAS,gBAAgB,GAAG,EAAE,CAAC;IAC/B,AAAS,gBAAgB,GAAG,GAAG,CAAC;IAEhC,iBAAiB,GAAY;QAC5B,OAAO,OAAO,iBAAiB,KAAK,WAAW,CAAC;KAChD;IAED,kBAAkB,GAAY;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;QAElC,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,AAAC;QAE9D,IAAI,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC;QAEhC,IAAI,OAAO,KAAK,QAAQ,EAAE,OAAO,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC;QAClE,IAAI,OAAO,KAAK,SAAS,EAAE,OAAO,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC;QACpE,IAAI,OAAO,KAAK,QAAQ,EACvB,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC;QAExD,OAAO,KAAK,CAAC;KACb;IAED,UAAU,GAAW;QACpB,OAAO,8CAAa,CAAC,cAAc,CAAC,OAAO,CAAC;KAC5C;IAED,UAAU,GAAW;QACpB,OAAO,8CAAa,CAAC,cAAc,CAAC,OAAO,IAAI,CAAC,CAAC;KACjD;IAED,sBAAsB,GAAY;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;QAClC,MAAM,OAAO,GAAG,8CAAa,CAAC,cAAc,CAAC,OAAO,IAAI,CAAC,AAAC;QAE1D,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,OAAO,KAAK,CAAC;QAC1E,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,IAAI,IAAI,CAAC,iBAAiB,EAAE,OAAO,IAAI,CAAC;QAC5E,IACC,CAAC,MAAM,CAAC,iBAAiB,IACzB,CAAE,CAAA,kBAAkB,IAAI,iBAAiB,CAAC,SAAS,CAAA,AAAC,EAEpD,OAAO,KAAK,CAAC;QAEd,IAAI,MAAM,AAAmB,AAAC;QAC9B,IAAI,SAAS,GAAG,KAAK,AAAC;QAEtB,IAAI;YACH,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;YACjC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC/B,SAAS,GAAG,IAAI,CAAC;SACjB,CAAC,OAAO,CAAC,EAAE,EACX,QAAS;YACT,IAAI,MAAM,EACT,MAAM,CAAC,KAAK,EAAE,CAAC;SAEhB;QAED,OAAO,SAAS,CAAC;KACjB;IAED,QAAQ,GAAW;QAClB,OAAO,CAAC;YACE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;UACtB,EAAE,IAAI,CAAC,KAAK,CAAC;sBACD,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;uBAC1B,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;2BACxB,EAAE,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;KAC3D;CACD,EAAG,AAAC;;;ADhEL,MAAM,oCAAc,GAAG;IACtB,UAAU,EAAE;QACX;YAAE,IAAI,EAAE,8BAA8B;SAAE;QACxC;YACC,IAAI,EAAE;gBACL,gCAAgC;gBAChC,gCAAgC;aAChC;YACD,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,SAAS;SACrB;QACD;YACC,IAAI,EAAE;gBACL,gCAAgC;gBAChC,gCAAgC;aAChC;YACD,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,SAAS;SACrB;KACD;IACD,YAAY,EAAE,cAAc;CAC5B,AAAC;AAEF,MAAM,0BAAI;IACT,IAAI,GAAS,EAAE;IAEf,AAAS,UAAU,GAAG,cAAc,CAAC;IACrC,AAAS,UAAU,GAAG,GAAG,CAAC;IAE1B,+BAA+B;IAC/B,AAAS,eAAe,GAAG;QAAE,MAAM,EAAE,CAAC;QAAE,MAAM,EAAE,CAAC;KAAE,CAAC;IACpD,AAAS,UAAU,GAAG,KAAK,CAAC;IAE5B,0CAA0C;IAC1C,AAAS,aAAa,GAAG,oCAAc,CAAC;IAExC,AAAS,OAAO,GAAG,yCAAQ,CAAC,UAAU,EAAE,CAAC;IACzC,AAAS,cAAc,GAAG,yCAAQ,CAAC,UAAU,EAAE,CAAC;IAEhD,qCAAqC;IACrC,AAAS,QAAQ,GAAG,AAAC,CAAA,WAAY;QAChC,MAAM,SAAS,GAAoB;YAClC,OAAO,EAAE,yCAAQ,CAAC,kBAAkB,EAAE;YACtC,MAAM,EAAE,yCAAQ,CAAC,iBAAiB,EAAE;YACpC,UAAU,EAAE,KAAK;YACjB,IAAI,EAAE,KAAK;YACX,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,KAAK;SACf,AAAC;QAEF,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,SAAS,CAAC;QAExC,IAAI,EAAE,AAAmB,AAAC;QAE1B,IAAI;YACH,EAAE,GAAG,IAAI,iBAAiB,CAAC,oCAAc,CAAC,CAAC;YAE3C,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;YAE5B,IAAI,EAAE,AAAgB,AAAC;YAEvB,IAAI;gBACH,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAE;oBAAE,OAAO,EAAE,IAAI;iBAAE,CAAC,CAAC;gBAC5D,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;gBACtB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC;gBAElC,cAAc;gBACd,IAAI;oBACH,EAAE,CAAC,UAAU,GAAG,MAAM,CAAC;oBACvB,SAAS,CAAC,UAAU,GAAG,CAAC,yCAAQ,CAAC,KAAK,CAAC;iBACvC,CAAC,OAAO,CAAC,EAAE,EAAE;aACd,CAAC,OAAO,CAAC,EAAE,EACX,QAAS;gBACT,IAAI,EAAE,EACL,EAAE,CAAC,KAAK,EAAE,CAAC;aAEZ;SACD,CAAC,OAAO,CAAC,EAAE,EACX,QAAS;YACT,IAAI,EAAE,EACL,EAAE,CAAC,KAAK,EAAE,CAAC;SAEZ;QAED,OAAO,SAAS,CAAC;KACjB,CAAA,EAAG,CAAC;IAEL,0BAA0B;IAC1B,UAAU,CAAC,EAAU,EAAW;QAC/B,kBAAkB;QAClB,OAAO,CAAC,EAAE,IAAI,uCAAuC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9D;IAED,IAAI,GAAG,8BAAe,CAAC;IACvB,MAAM,GAAG,gCAAiB,CAAC;IAE3B,eAAe;IAEf,AAAQ,UAAU,GAAW,CAAC,CAAC;IAE/B,KAAK,CACJ,IAAU,EACuD;QACjE,MAAM,MAAM,GAAG,EAAE,AAAC;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,AAAC;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,yCAAI,CAAC,UAAU,CAAC,AAAC;QAEhD,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAI,KAAK,GAAG,CAAC,AAAC;QAEd,MAAO,KAAK,GAAG,IAAI,CAAE;YACpB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,yCAAI,CAAC,UAAU,CAAC,AAAC;YACpD,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,AAAC;YAEjC,MAAM,KAAK,GAAG;gBACb,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,CAAC,EAAE,KAAK;gBACR,IAAI,EAAE,CAAC;uBACP,KAAK;aACL,AAAC;YAEF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEnB,KAAK,GAAG,GAAG,CAAC;YACZ,KAAK,EAAE,CAAC;SACR;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,OAAO,MAAM,CAAC;KACd;IAED,iBAAiB,CAChB,IAAU,EACV,EAAqC,EACxB;QACb,MAAM,EAAE,GAAG,IAAI,UAAU,EAAE,AAAC;QAE5B,EAAE,CAAC,MAAM,GAAG,SAAU,GAAG,EAAE;YAC1B,IAAI,GAAG,CAAC,MAAM,EACb,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAgB,CAAC;SAEtC,CAAC;QAEF,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAE3B,OAAO,EAAE,CAAC;KACV;IAED,yBAAyB,CAAC,MAAc,EAAmC;QAC1E,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,AAAC;QAEhD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CACrC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAG5C,OAAO,SAAS,CAAC,MAAM,CAAC;KACxB;IAED,WAAW,GAAW;QACrB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3C;IAED,QAAQ,GAAY;QACnB,OAAO,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC;KACtC;CACD;AACM,MAAM,yCAAI,GAAG,IAAI,0BAAI,EAAE,AAAC;;ADnL/B;AGAA;;ACAA,MAAM,gCAAU,GAAG,UAAU,AAAC;IASvB,yCAKN;UALW,yCAAQ;IAAR,yCAAQ,CAAR,yCAAQ,CACnB,UAAQ,IAAR,CAAQ,IAAR,UAAQ;IADG,yCAAQ,CAAR,yCAAQ,CAEnB,QAAM,IAAN,CAAM,IAAN,QAAM;IAFK,yCAAQ,CAAR,yCAAQ,CAGnB,UAAQ,IAAR,CAAQ,IAAR,UAAQ;IAHG,yCAAQ,CAAR,yCAAQ,CAInB,KAAG,IAAH,CAAG,IAAH,KAAG;GAJQ,yCAAQ,KAAR,yCAAQ;AAOpB,MAAM,4BAAM;IACX,AAAQ,SAAS,GAAG,yCAAQ,CAAC,QAAQ,CAAC;IAEtC,IAAI,QAAQ,GAAa;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC;KACtB;IAED,IAAI,QAAQ,CAAC,QAAkB,EAAE;QAChC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC1B;IAED,GAAG,CAAC,GAAG,IAAI,AAAO,EAAE;QACnB,IAAI,IAAI,CAAC,SAAS,IAAI,yCAAQ,CAAC,GAAG,EACjC,IAAI,CAAC,MAAM,CAAC,yCAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;KAEpC;IAED,IAAI,CAAC,GAAG,IAAI,AAAO,EAAE;QACpB,IAAI,IAAI,CAAC,SAAS,IAAI,yCAAQ,CAAC,QAAQ,EACtC,IAAI,CAAC,MAAM,CAAC,yCAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC;KAEzC;IAED,KAAK,CAAC,GAAG,IAAI,AAAO,EAAE;QACrB,IAAI,IAAI,CAAC,SAAS,IAAI,yCAAQ,CAAC,MAAM,EACpC,IAAI,CAAC,MAAM,CAAC,yCAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;KAEvC;IAED,cAAc,CAAC,EAA6C,EAAQ;QACnE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACjB;IAED,AAAQ,MAAM,CAAC,QAAkB,EAAE,GAAG,IAAI,AAAO,EAAQ;QACxD,MAAM,IAAI,GAAG;YAAC,gCAAU;eAAK,IAAI;SAAC,AAAC;QAEnC,IAAK,IAAI,CAAC,IAAI,IAAI,CACjB,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,KAAK,EAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAIxD,IAAI,QAAQ,IAAI,yCAAQ,CAAC,GAAG,EAC3B,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;aACf,IAAI,QAAQ,IAAI,yCAAQ,CAAC,QAAQ,EACvC,OAAO,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;aAC3B,IAAI,QAAQ,IAAI,yCAAQ,CAAC,MAAM,EACrC,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;KAEjC;CACD;IAED,wCAA4B,GAAb,IAAI,4BAAM,EAAE;;;ACpE3B;;ACAA,IAAO,yCAON;UAPW,yCAAmB;IAAnB,yCAAmB,CAC9B,MAAI,IAAG,MAAM;IADF,yCAAmB,CAE9B,QAAM,IAAG,QAAQ;IAFN,yCAAmB,CAG9B,MAAI,IAAG,MAAM;IAHF,yCAAmB,CAI9B,OAAK,IAAG,OAAO;IAJJ,yCAAmB,CAK9B,OAAK,IAAG,OAAO;IALJ,yCAAmB,CAM9B,iBAAe,IAAG,iBAAiB;GANxB,yCAAmB,KAAnB,yCAAmB;IASxB,yCAGN;UAHW,yCAAc;IAAd,yCAAc,CACzB,MAAI,IAAG,MAAM;IADF,yCAAc,CAEzB,OAAK,IAAG,OAAO;GAFJ,yCAAc,KAAd,yCAAc;IAKnB,yCAON;UAPW,yCAAa;IAAb,yCAAa,CACxB,MAAI,IAAG,MAAM;IADF,yCAAa,CAExB,OAAK,IAAG,OAAO;IAFJ,yCAAa,CAGxB,YAAU,IAAG,YAAY;IAHd,yCAAa,CAIxB,MAAI,IAAG,MAAM;IAJF,yCAAa,CAKxB,cAAY,IAAG,cAAc;IALlB,yCAAa,CAMxB,OAAK,IAAG,OAAO;GANJ,yCAAa,KAAb,yCAAa;IASlB,yCAaN;UAbW,yCAAa;IAAb,yCAAa,CACxB,qBAAmB,IAAG,sBAAsB;IADjC,yCAAa,CAExB,cAAY,IAAG,cAAc;IAFlB,yCAAa,CAGxB,WAAS,IAAG,YAAY;IAHb,yCAAa,CAIxB,YAAU,IAAG,aAAa;IAJf,yCAAa,CAKxB,SAAO,IAAG,SAAS;IALR,yCAAa,CAMxB,iBAAe,IAAG,kBAAkB;IANzB,yCAAa,CAOxB,gBAAc,IAAG,iBAAiB;IAPvB,yCAAa,CAQxB,aAAW,IAAG,cAAc;IARjB,yCAAa,CASxB,aAAW,IAAG,cAAc;IATjB,yCAAa,CAUxB,cAAY,IAAG,eAAe;IAVnB,yCAAa,CAWxB,eAAa,IAAG,gBAAgB;IAXrB,yCAAa,CAYxB,QAAM,IAAG,QAAQ;GAZN,yCAAa,KAAb,yCAAa;IAelB,wCAIN;UAJW,wCAAiB;IAAjB,wCAAiB,CAC5B,QAAM,IAAG,QAAQ;IADN,wCAAiB,CAE5B,YAAU,IAAG,aAAa;IAFf,wCAAiB,CAG5B,MAAI,IAAG,MAAM;GAHF,wCAAiB,KAAjB,wCAAiB;IAMtB,yCAKN;UALW,yCAAe;IAAf,yCAAe,CAC1B,SAAO,IAAG,SAAS;IADR,yCAAe,CAE1B,cAAY,IAAG,cAAc;IAFlB,yCAAe,CAG1B,OAAK,IAAG,OAAO;IAHJ,yCAAe,CAI1B,OAAK,IAAG,OAAO;GAJJ,yCAAe,KAAf,yCAAe;IAOpB,yCAWN;UAXW,yCAAiB;IAAjB,yCAAiB,CAC5B,WAAS,IAAG,WAAW;IADZ,yCAAiB,CAE5B,WAAS,IAAG,WAAW;IAFZ,yCAAiB,CAG5B,OAAK,IAAG,OAAO;IAHJ,yCAAiB,CAI5B,QAAM,IAAG,QAAQ;IAJN,yCAAiB,CAK5B,MAAI,IAAG,MAAM;IALF,yCAAiB,CAM5B,OAAK,IAAG,OAAO;IANJ,yCAAiB,CAO5B,SAAO,IAAG,UAAU;IAPT,yCAAiB,CAQ5B,YAAU,IAAG,aAAa;IARf,yCAAiB,CAS5B,OAAK,IAAG,OAAO;IATJ,yCAAiB,CAU5B,QAAM,IAAG,QAAQ;GAVN,yCAAiB,KAAjB,yCAAiB;;;;ACnD7B,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,g6JAA85J,CAAC,CAAC;;;AFSr7J,MAAM,yCAAM,SAAS,iCAAY;IAQvC,YACC,MAAW,EACX,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,GAAW,EACM,YAAoB,GAAG,IAAI,CAC3C;QACD,KAAK,EAAE,CAAC;aAFS,YAAoB,GAApB,YAAoB;aAb9B,aAAa,GAAY,IAAI;aAE7B,cAAc,GAAkB,EAAE;QAezC,MAAM,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,OAAO,AAAC;QAE/C,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,aAAa,GAAG,GAAG,CAAC;KAC5E;IAED,KAAK,CAAC,EAAU,EAAE,KAAa,EAAQ;QACtC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,MAAM,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,AAAC;QAEzD,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EACxC,OAAO;QAGR,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,KAAK,GAAG,WAAW,GAAG,iCAAO,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,KAAK,GAAK;YACnC,IAAI,IAAI,AAAC;YAET,IAAI;gBACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9B,wCAAM,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;aAC7C,CAAC,OAAO,CAAC,EAAE;gBACX,wCAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;gBACjD,OAAO;aACP;YAED,IAAI,CAAC,IAAI,CAAC,yCAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACzC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,KAAK,GAAK;YACjC,IAAI,IAAI,CAAC,aAAa,EACrB,OAAO;YAGR,wCAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAEpC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,yCAAe,CAAC,YAAY,CAAC,CAAC;SACxC,CAAC;QAEF,8EAA8E;QAC9E,kBAAkB;QAClB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAM;YAC3B,IAAI,IAAI,CAAC,aAAa,EACrB,OAAO;YAGR,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,wCAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC1B,CAAC;KACF;IAED,AAAQ,kBAAkB,GAAS;QAClC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,IAAM;YACpC,IAAI,CAAC,cAAc,EAAE,CAAC;SACtB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KACtB;IAED,AAAQ,cAAc,GAAS;QAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACpB,wCAAM,CAAC,GAAG,CAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC;YAC3D,OAAO;SACP;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YAAE,IAAI,EAAE,yCAAiB,CAAC,SAAS;SAAE,CAAC,AAAC;QAEtE,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC1B;IAED,uCAAuC,CACvC,AAAQ,OAAO,GAAY;QAC1B,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,CAAC,CAAC;KACvD;IAED,4BAA4B,CAC5B,AAAQ,mBAAmB,GAAS;QACnC,oCAAoC;QACpC,0EAA0E;QAC1E,MAAM,WAAW,GAAG;eAAI,IAAI,CAAC,cAAc;SAAC,AAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,KAAK,MAAM,OAAO,IAAI,WAAW,CAChC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAEpB;IAED,kCAAkC,CAClC,IAAI,CAAC,IAAS,EAAQ;QACrB,IAAI,IAAI,CAAC,aAAa,EACrB,OAAO;QAGR,4EAA4E;QAC5E,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO;SACP;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,IAAI,CAAC,IAAI,CAAC,yCAAe,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;YACpD,OAAO;SACP;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAClB,OAAO;QAGR,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,AAAC;QAErC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;IAED,KAAK,GAAS;QACb,IAAI,IAAI,CAAC,aAAa,EACrB,OAAO;QAGR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC1B;IAED,AAAQ,QAAQ,GAAS;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,MAAM,GAClB,IAAI,CAAC,OAAO,CAAC,SAAS,GACtB,IAAI,CAAC,OAAO,CAAC,OAAO,GACnB,IAAI,CAAC;YACP,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SACzB;QAED,YAAY,CAAC,IAAI,CAAC,YAAY,CAAE,CAAC;KACjC;CACD;;;AG3KD;;ACAA;;;AAeO,MAAM,wCAAU;IACtB,YAAqB,UAA0B,CAAE;aAA5B,UAA0B,GAA1B,UAA0B;KAAI;IAEnD,0EAA0E,CAC1E,eAAe,CAAC,OAAY,EAAE;QAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,EAAE,AAAC;QAEnD,2BAA2B;QAC3B,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;QAEhD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,yCAAc,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,EACnE,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QAG9D,6BAA6B;QAC7B,IAAI,OAAO,CAAC,UAAU,EAAE;YACvB,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,yCAAc,CAAC,IAAI,EAAE;gBACjD,MAAM,cAAc,GAAmB,IAAI,CAAC,UAAU,AAAC;gBAEvD,MAAM,MAAM,GAAuB;oBAAE,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ;iBAAE,AAAC;gBAEnE,MAAM,WAAW,GAAG,cAAc,CAAC,iBAAiB,CACnD,cAAc,CAAC,KAAK,EACpB,MAAM,CACN,AAAC;gBACF,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;SAClB,MACA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;KAEtC;IAED,kBAAkB,CAClB,AAAQ,oBAAoB,GAAsB;QACjD,wCAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAE1C,MAAM,cAAc,GAAG,IAAI,iBAAiB,CAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CACvC,AAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAErC,OAAO,cAAc,CAAC;KACtB;IAED,uCAAuC,CACvC,AAAQ,eAAe,CAAC,cAAiC,EAAE;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,AAAC;QACpC,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,AAAC;QAClD,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,AAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,kBAAkB;QAClB,wCAAM,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE5C,cAAc,CAAC,cAAc,GAAG,CAAC,GAAG,GAAK;YACxC,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO;YAEvD,wCAAM,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;YAEpE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;gBACpB,IAAI,EAAE,yCAAiB,CAAC,SAAS;gBACjC,OAAO,EAAE;oBACR,SAAS,EAAE,GAAG,CAAC,SAAS;oBACxB,IAAI,EAAE,cAAc;oBACpB,YAAY,EAAE,YAAY;iBAC1B;gBACD,GAAG,EAAE,MAAM;aACX,CAAC,CAAC;SACH,CAAC;QAEF,cAAc,CAAC,0BAA0B,GAAG,IAAM;YACjD,OAAQ,cAAc,CAAC,kBAAkB;gBACxC,KAAK,QAAQ;oBACZ,wCAAM,CAAC,GAAG,CACT,uDAAuD,GAAG,MAAM,CAChE,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CACnB,yCAAmB,CAAC,KAAK,EACzB,IAAI,KAAK,CAAC,+BAA+B,GAAG,MAAM,GAAG,UAAU,CAAC,CAChE,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;oBACxB,MAAM;gBACP,KAAK,QAAQ;oBACZ,wCAAM,CAAC,GAAG,CACT,uDAAuD,GAAG,MAAM,CAChE,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CACnB,yCAAmB,CAAC,KAAK,EACzB,IAAI,KAAK,CAAC,gBAAgB,GAAG,MAAM,GAAG,UAAU,CAAC,CACjD,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;oBACxB,MAAM;gBACP,KAAK,cAAc;oBAClB,wCAAM,CAAC,GAAG,CACT,oEAAoE,GACnE,MAAM,CACP,CAAC;oBACF,MAAM;gBACP,KAAK,WAAW;oBACf,cAAc,CAAC,cAAc,GAAG,yCAAI,CAAC,IAAI,CAAC;oBAC1C,MAAM;aACP;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CACnB,yCAAmB,CAAC,eAAe,EACnC,cAAc,CAAC,kBAAkB,CACjC,CAAC;SACF,CAAC;QAEF,kBAAkB;QAClB,wCAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QACzC,qEAAqE;QACrE,uBAAuB;QACvB,cAAc,CAAC,aAAa,GAAG,CAAC,GAAG,GAAK;YACvC,wCAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YAEpC,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,AAAC;YAChC,MAAM,UAAU,GACf,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,AAC5C,AAAC;YAEF,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACnC,CAAC;QAEF,mBAAmB;QACnB,wCAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAE1C,cAAc,CAAC,OAAO,GAAG,CAAC,GAAG,GAAK;YACjC,wCAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YAErC,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,AAAC;YAC9B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,AAAC;YAEhE,IAAI,UAAU,CAAC,IAAI,KAAK,yCAAc,CAAC,KAAK,EAAE;gBAC7C,MAAM,eAAe,GAAoB,UAAU,AAAC;gBAEpD,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;aAC1D;SACD,CAAC;KACF;IAED,OAAO,GAAS;QACf,wCAAM,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEpE,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,AAAC;QAEtD,IAAI,CAAC,cAAc,EAClB,OAAO;QAGR,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC;QAEtC,8CAA8C;QAC9C,cAAc,CAAC,cAAc,GAC5B,cAAc,CAAC,0BAA0B,GACzC,cAAc,CAAC,aAAa,GAC5B,cAAc,CAAC,OAAO,GACrB,IAAM,EAAE,CAAC;QAEX,MAAM,uBAAuB,GAAG,cAAc,CAAC,cAAc,KAAK,QAAQ,AAAC;QAC3E,IAAI,oBAAoB,GAAG,KAAK,AAAC;QAEjC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,yCAAc,CAAC,IAAI,EAAE;YACjD,MAAM,cAAc,GAAmB,IAAI,CAAC,UAAU,AAAC;YACvD,MAAM,WAAW,GAAG,cAAc,CAAC,WAAW,AAAC;YAE/C,IAAI,WAAW,EACd,oBAAoB,GACnB,CAAC,CAAC,WAAW,CAAC,UAAU,IAAI,WAAW,CAAC,UAAU,KAAK,QAAQ,CAAC;SAElE;QAED,IAAI,uBAAuB,IAAI,oBAAoB,EAClD,cAAc,CAAC,KAAK,EAAE,CAAC;KAExB;IAED,MAAc,UAAU,GAAkB;QACzC,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,AAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,IAAI;YACH,MAAM,KAAK,GAAG,MAAM,cAAc,CAAC,WAAW,CAC7C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CACnC,AAAC;YAEF,wCAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAE7B,IACC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,IACpC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,KAAK,UAAU,EAE1D,KAAK,CAAC,GAAG,GACR,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC;YAG/D,IAAI;gBACH,MAAM,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBAEhD,wCAAM,CAAC,GAAG,CACT,uBAAuB,EACvB,KAAK,EACL,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAC7B,CAAC;gBAEF,IAAI,OAAO,GAAQ;oBAClB,GAAG,EAAE,KAAK;oBACV,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;oBAC1B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;oBAC1C,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;oBAClC,OAAO,EAAE,yCAAI,CAAC,OAAO;iBACrB,AAAC;gBAEF,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,yCAAc,CAAC,IAAI,EAAE;oBACjD,MAAM,cAAc,GAAmB,IAAI,CAAC,UAAU,AAAC;oBAEvD,OAAO,GAAG;wBACT,GAAG,OAAO;wBACV,KAAK,EAAE,cAAc,CAAC,KAAK;wBAC3B,QAAQ,EAAE,cAAc,CAAC,QAAQ;wBACjC,aAAa,EAAE,cAAc,CAAC,aAAa;qBAC3C,CAAC;iBACF;gBAED,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,yCAAiB,CAAC,KAAK;6BAC7B,OAAO;oBACP,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;iBACzB,CAAC,CAAC;aACH,CAAC,OAAO,GAAG,EAAE;gBACb,mEAAmE;gBACnE,IACC,GAAG,IACH,wFAAwF,EACvF;oBACD,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oBAC9C,wCAAM,CAAC,GAAG,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;iBACnD;aACD;SACD,CAAC,OAAO,KAAK,EAAE;YACf,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChD,wCAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;SAC7C;KACD;IAED,MAAc,WAAW,GAAkB;QAC1C,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,AAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,IAAI;YACH,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,AAAC;YACnD,wCAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAE9B,IACC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,IACpC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,KAAK,UAAU,EAE1D,MAAM,CAAC,GAAG,GACT,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC;YAGjE,IAAI;gBACH,MAAM,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAEjD,wCAAM,CAAC,GAAG,CACT,CAAC,qBAAqB,CAAC,EACvB,MAAM,EACN,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAC7B,CAAC;gBAEF,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,yCAAiB,CAAC,MAAM;oBAC9B,OAAO,EAAE;wBACR,GAAG,EAAE,MAAM;wBACX,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;wBAC1B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;wBAC1C,OAAO,EAAE,yCAAI,CAAC,OAAO;qBACrB;oBACD,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;iBACzB,CAAC,CAAC;aACH,CAAC,OAAO,GAAG,EAAE;gBACb,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBAC9C,wCAAM,CAAC,GAAG,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;aACnD;SACD,CAAC,OAAO,KAAK,EAAE;YACf,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAChD,wCAAM,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;SAC/C;KACD;IAED,qBAAqB,CACrB,MAAM,SAAS,CAAC,IAAY,EAAE,GAAQ,EAAiB;QACtD,GAAG,GAAG,IAAI,qBAAqB,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,AAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,wCAAM,CAAC,GAAG,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;QAE9C,MAAM,IAAI,GAAG,IAAI,AAAC;QAElB,IAAI;YACH,MAAM,cAAc,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;YAC/C,wCAAM,CAAC,GAAG,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,IAAI,KAAK,OAAO,EACnB,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;SAE1B,CAAC,OAAO,GAAG,EAAE;YACb,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC9C,wCAAM,CAAC,GAAG,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC;SACpD;KACD;IAED,0BAA0B,CAC1B,MAAM,eAAe,CAAC,GAAQ,EAAiB;QAC9C,wCAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;QAEpC,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,AAAC;QAChC,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,AAAC;QACxC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,AAAC;QAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,AAAC;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,IAAI;YACH,MAAM,cAAc,CAAC,eAAe,CACnC,IAAI,eAAe,CAAC;gBACnB,MAAM,EAAE,MAAM;gBACd,aAAa,EAAE,aAAa;gBAC5B,SAAS,EAAE,SAAS;aACpB,CAAC,CACF,CAAC;YACF,wCAAM,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9D,CAAC,OAAO,GAAG,EAAE;YACb,QAAQ,CAAC,SAAS,CAAC,yCAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC9C,wCAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;SAC/C;KACD;IAED,AAAQ,sBAAsB,CAC7B,MAAmB,EACnB,cAAiC,EAC1B;QACP,wCAAM,CAAC,GAAG,CAAC,CAAC,uBAAuB,EAAE,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAErE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAC3B,OAAO,wCAAM,CAAC,KAAK,CAClB,CAAC,gEAAgE,CAAC,CAClE,CAAC;QAGH,MAAM,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,GAAK;YACrC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACvC,CAAC,CAAC;KACH;IAED,AAAQ,2BAA2B,CAClC,MAAmB,EACnB,eAAgC,EACzB;QACP,wCAAM,CAAC,GAAG,CACT,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,CAC7E,CAAC;QAEF,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAClC;CACD;;;;AC9XD;AAKO,MAAe,yCAAc,SAAS,iCAAY;IAUxD,IAAI,IAAI,GAAG;QACV,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;IAED,YACU,IAAY,EACd,QAAc,EACZ,OAAY,CACpB;QACD,KAAK,EAAE,CAAC;aAJC,IAAY,GAAZ,IAAY;aACd,QAAc,GAAd,QAAc;aACZ,OAAY,GAAZ,OAAY;aAhBZ,KAAK,GAAG,KAAK;QAoBtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;KACjC;CAKD;;;AFhBM,MAAM,yCAAe,SAAS,yCAAc;IAClD,OAAwB,SAAS,GAAG,KAAK,CAAC;IAM1C,IAAI,IAAI,GAAG;QACV,OAAO,yCAAc,CAAC,KAAK,CAAC;KAC5B;IAED,IAAI,WAAW,GAAgB;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC;KACzB;IACD,IAAI,YAAY,GAAgB;QAC/B,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;IAED,YAAY,MAAc,EAAE,QAAc,EAAE,OAAY,CAAE;QACzD,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,YAAY,GAChB,IAAI,CAAC,OAAO,CAAC,YAAY,IACzB,yCAAe,CAAC,SAAS,GAAG,yCAAI,CAAC,WAAW,EAAE,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,IAAI,wCAAU,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,IAAI,CAAC,YAAY,EACpB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;YAChC,OAAO,EAAE,IAAI,CAAC,YAAY;YAC1B,UAAU,EAAE,IAAI;SAChB,CAAC,CAAC;KAEJ;IAED,SAAS,CAAC,YAAY,EAAE;QACvB,wCAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,KAAK,CAAC,IAAI,CAAC,yCAAmB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,8BAA8B;KACpF;IAED,aAAa,CAAC,OAAsB,EAAQ;QAC3C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,AAAC;QAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;QAEhC,OAAQ,OAAO,CAAC,IAAI;YACnB,KAAK,yCAAiB,CAAC,MAAM;gBAC5B,wBAAwB;gBACxB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,MAAM;YACP,KAAK,yCAAiB,CAAC,SAAS;gBAC/B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACpD,MAAM;YACP;gBACC,wCAAM,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxE,MAAM;SACP;KACD;IAED,MAAM,CAAC,MAAmB,EAAE,OAAqB,GAAG,EAAE,EAAQ;QAC7D,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,wCAAM,CAAC,IAAI,CACV,sFAAsF,CACtF,CAAC;YACF,OAAO;SACP;QAED,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAE3B,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,EAClC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QAGlD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;YAChC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;YACxB,OAAO,EAAE,MAAM;SACf,CAAC,CAAC;QACH,mEAAmE;QACnE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,AAAC;QAE/D,KAAK,IAAI,OAAO,IAAI,QAAQ,CAC3B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAG7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KAClB;IAED;;IAEG,CAEH,uCAAuC,CACvC,KAAK,GAAS;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAEtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EACvC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAG7B,IAAI,CAAC,IAAI,CAAC,IAAI,EACb,OAAO;QAGR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,KAAK,CAAC,IAAI,CAAC,yCAAmB,CAAC,KAAK,CAAC,CAAC;KACtC;CACD;;;AG1ID;;;;;ACAA;;AAGO,MAAM,yCAAa,SAAS,iCAAY;IAC9C,AAAS,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC;IAEnD,AAAQ,MAAM,GAAW,EAAE,CAAC;IAC5B,AAAQ,WAAW,GAAY,KAAK,CAAC;IAErC,aAAc;QACb,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,GAAK;YACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,GAAG,CAAC,MAAM,EACb,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAgB,CAAC;YAGrD,IAAI,CAAC,UAAU,EAAE,CAAC;SAClB,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,GAAG,GAAK;YAClC,wCAAM,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SACxB,CAAC;KACF;IAED,IAAI,KAAK,GAAW;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC;KACnB;IAED,IAAI,IAAI,GAAW;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACzB;IAED,IAAI,UAAU,GAAY;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;IAED,KAAK,CAAC,IAAU,EAAQ;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,UAAU,EAAE,OAAO;QAE5B,IAAI,CAAC,UAAU,EAAE,CAAC;KAClB;IAED,OAAO,GAAS;QACf,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACjB;IAED,AAAQ,UAAU,GAAS;QAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE,OAAO;QAC5B,IAAI,IAAI,CAAC,UAAU,EAAE,OAAO;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;KACtD;CACD;;;AD7CM,MAAM,yCAAc,SAAS,yCAAc;IACjD,OAAwB,SAAS,GAAG,KAAK,CAAC;IAC1C,OAAwB,mBAAmB,GAAG,OAAe,CAAC;IAM9D,SAAS,GAA0B,IAAI,CAAC,SAAS,CAAC;IAClD,KAAK,GAA0B,IAAI,CAAC,KAAK,CAAC;IAE1C,IAAI,IAAI,GAAG;QACV,OAAO,yCAAc,CAAC,IAAI,CAAC;KAC3B;IAED,AAAQ,OAAO,GAAU,EAAE,CAAC;IAC5B,AAAQ,WAAW,GAAG,CAAC,CAAC;IACxB,AAAQ,UAAU,GAAG,KAAK,CAAC;IAC3B,AAAQ,YAAY,GAMhB,EAAE,CAAC;IAGP,AAAQ,cAAc,GAAG,IAAI,yCAAa,EAAE,CAAC;IAE7C,IAAI,WAAW,GAAmB;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC;KAChB;IAED,IAAI,UAAU,GAAW;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC;KACxB;IAED,YAAY,MAAc,EAAE,QAAc,EAAE,OAAY,CAAE;QACzD,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,GAChB,IAAI,CAAC,OAAO,CAAC,YAAY,IACzB,yCAAc,CAAC,SAAS,GAAG,yCAAI,CAAC,WAAW,EAAE,CAAC;QAE/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,wCAAiB,CAAC,MAAM,CAAC;QAC5E,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAExC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAe,GAAK;YACnD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,OAAO,EAAE,IAAM;YACrC,wCAAM,CAAC,KAAK,CACX,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,8DAA8D,CAAC,CACvF,CAAC;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,wCAAU,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,eAAe,CAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI;YACxB,UAAU,EAAE,IAAI;SAChB,CACD,CAAC;KACF;IAED,8DAA8D,CAC9D,UAAU,CAAC,EAAkB,EAAQ;QACpC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC7B;IAED,AAAQ,qBAAqB,GAAS;QACrC,IAAI,CAAC,yCAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,yCAAI,CAAC,QAAQ,CAAC,QAAQ,EACtD,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,aAAa,CAAC;QAG7C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAM;YAC/B,wCAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,yCAAmB,CAAC,IAAI,CAAC,CAAC;SACpC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC,GAAK;YACnC,wCAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAC3B,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAM;YAChC,wCAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,KAAK,EAAE,CAAC;SACb,CAAC;KACF;IAED,iCAAiC;IACjC,AAAQ,kBAAkB,CAAC,EAnH5B,MAoHE,IAAI,CAAA,EAGJ,EAAQ;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,AAAC;QAElC,MAAM,qBAAqB,GAC1B,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,MAAM,IAC/C,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,UAAU,AAAC;QAErD,IAAI,gBAAgB,GAAQ,IAAI,AAAC;QAEjC,IAAI,qBAAqB,EAAE;YAC1B,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACtB,gCAAgC;gBAChC,yCAAI,CAAC,iBAAiB,CAAC,IAAI,EAAU,CAAC,EAAE,GAAK;oBAC5C,MAAM,YAAY,GAAG,yCAAI,CAAC,MAAM,CAAC,EAAE,CAAC,AAAC;oBACrC,IAAI,CAAC,IAAI,CAAC,yCAAmB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;iBAClD,CAAC,CAAC;gBACH,OAAO;aACP,MAAM,IAAI,QAAQ,KAAK,WAAW,EAClC,gBAAgB,GAAG,yCAAI,CAAC,MAAM,CAAC,IAAI,CAAgB,CAAC;iBAC9C,IAAI,QAAQ,KAAK,MAAM,EAAE;gBAC/B,6EAA6E;gBAC7E,MAAM,EAAE,GAAG,yCAAI,CAAC,yBAAyB,CAAC,IAAI,CAAW,AAAC;gBAC1D,gBAAgB,GAAG,yCAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aACnC;SACD,MAAM,IAAI,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,IAAI,EACvD,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAW,CAAC;QAG/C,6DAA6D;QAC7D,sCAAsC;QACtC,IAAI,gBAAgB,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YACpC,OAAO;SACP;QAED,KAAK,CAAC,IAAI,CAAC,yCAAmB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;KACvD;IAED,AAAQ,YAAY,CAAC,IAKpB,EAAQ;QACR,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,AAAC;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI;YAC1C,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,IAAI,CAAC,KAAK;SACjB,AAAC;QAEF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,SAAS,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC;QAElC,IAAI,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;YACxC,qEAAqE;YACrE,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAE7B,sEAAsE;YACtE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,AAAC;YACtC,IAAI,CAAC,kBAAkB,CAAC;sBAAE,IAAI;aAAE,CAAC,CAAC;SAClC;KACD;IAED;;IAEG,CAEH,uCAAuC,CACvC,KAAK,GAAS;QACb,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACxB;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAEtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SAChB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;YACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC3B;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EACb,OAAO;QAGR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,KAAK,CAAC,IAAI,CAAC,yCAAmB,CAAC,KAAK,CAAC,CAAC;KACtC;IAED,gCAAgC,CAChC,IAAI,CAAC,IAAS,EAAE,OAAiB,EAAQ;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,KAAK,CAAC,IAAI,CACT,yCAAmB,CAAC,KAAK,EACzB,IAAI,KAAK,CACR,yFAAyF,CACzF,CACD,CAAC;YACF,OAAO;SACP;QAED,IAAI,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,IAAI,EAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aACnC,IACN,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,MAAM,IAC/C,IAAI,CAAC,aAAa,KAAK,wCAAiB,CAAC,UAAU,EAClD;YACD,MAAM,IAAI,GAAG,yCAAI,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;YAE7B,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,yCAAI,CAAC,UAAU,EAAE;gBAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACvB,OAAO;aACP;YAED,IAAI,CAAC,yCAAI,CAAC,QAAQ,CAAC,UAAU,EAC5B,uEAAuE;YACvE,qCAAqC;YACrC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBAEhC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAE1B,MACA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;KAE1B;IAED,AAAQ,aAAa,CAAC,GAAQ,EAAQ;QACrC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACvC;KACD;IAED,qCAAqC;IACrC,AAAQ,QAAQ,CAAC,GAAQ,EAAW;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,EACb,OAAO,KAAK,CAAC;QAGd,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,yCAAc,CAAC,mBAAmB,EAAE;YACzE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,UAAU,CAAC,IAAM;gBAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB,EAAE,EAAE,CAAC,CAAC;YAEP,OAAO,KAAK,CAAC;SACb;QAED,IAAI;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC3B,CAAC,OAAO,CAAC,EAAE;YACX,wCAAM,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC;KACZ;IAED,+CAA+C;IAC/C,AAAQ,UAAU,GAAS;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,EACb,OAAO;QAGR,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAC5B,OAAO;QAGR,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,AAAC;QAE5B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,UAAU,EAAE,CAAC;SAClB;KACD;IAED,AAAQ,WAAW,CAAC,IAAU,EAAQ;QACrC,MAAM,KAAK,GAAG,yCAAI,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;QAC/B,wCAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QAE5E,KAAK,IAAI,KAAI,IAAI,KAAK,CACrB,IAAI,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,CAAC,CAAC;KAEvB;IAED,aAAa,CAAC,OAAsB,EAAQ;QAC3C,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;QAEhC,OAAQ,OAAO,CAAC,IAAI;YACnB,KAAK,yCAAiB,CAAC,MAAM;gBAC5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;gBACtD,MAAM;YACP,KAAK,yCAAiB,CAAC,SAAS;gBAC/B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACpD,MAAM;YACP;gBACC,wCAAM,CAAC,IAAI,CACV,4BAA4B,EAC5B,OAAO,CAAC,IAAI,EACZ,YAAY,EACZ,IAAI,CAAC,IAAI,CACT,CAAC;gBACF,MAAM;SACP;KACD;CACD;;;;AE7VD;;;AAKO,MAAM,yCAAG;IACf,YAA6B,QAAsB,CAAE;aAAxB,QAAsB,GAAtB,QAAsB;KAAI;IAEvD,AAAQ,aAAa,CAAC,MAAc,EAAqB;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,AAAC;QACzD,MAAM,EAVR,MAUU,IAAI,CAAA,EAVd,MAUgB,IAAI,CAAA,EAVpB,MAUsB,IAAI,CAAA,EAV1B,KAU4B,GAAG,CAAA,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAChD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,AAAC;QAC5E,mCAAmC;QACnC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5D,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,iCAAO,CAAC,CAAC;QACzC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;YACtB,cAAc,EAAE,iCAAiC;SACjD,CAAC,CAAC;KACH;IAED,sEAAsE,CACtE,MAAM,UAAU,GAAoB;QACnC,IAAI;YACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,AAAC;YAEhD,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAC1B,MAAM,IAAI,KAAK,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAGrD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;SACvB,CAAC,OAAO,KAAK,EAAE;YACf,wCAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YAE3C,IAAI,SAAS,GAAG,EAAE,AAAC;YAEnB,IACC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,IAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,yCAAI,CAAC,UAAU,EAEtC,SAAS,GACR,iIAEO,CAAC;YAGV,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,SAAS,CAAC,CAAC;SACpE;KACD;IAED,kBAAkB,CAClB,MAAM,YAAY,GAAmB;QACpC,IAAI;YACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;YAEnD,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC5B,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC5B,IAAI,YAAY,GAAG,EAAE,AAAC;oBAEtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,yCAAI,CAAC,UAAU,EACzC,YAAY,GACX,qHAC0D,CAAC;yBAE5D,YAAY,GACX,0FACiC,CAAC;oBAGpC,MAAM,IAAI,KAAK,CACd,8DAA8D,GAC7D,YAAY,CACb,CAAC;iBACF;gBAED,MAAM,IAAI,KAAK,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACpD;YAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;SACvB,CAAC,OAAO,KAAK,EAAE;YACf,wCAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YAEnD,MAAM,IAAI,KAAK,CAAC,2CAA2C,GAAG,KAAK,CAAC,CAAC;SACrE;KACD;CACD;;;AVlED,MAAM,iCAAW;CAWhB;AAKM,MAAM,yCAAI,SAAS,iCAAY;IACrC,OAAwB,WAAW,GAAG,QAAQ,CAAC;IAM/C,AAAQ,GAAG,GAAkB,IAAI,CAAC;IAClC,AAAQ,aAAa,GAAkB,IAAI,CAAC;IAE5C,UAAU;IACV,AAAQ,UAAU,GAAG,KAAK,CAAC;IAC3B,AAAQ,aAAa,GAAG,KAAK,CAAC;IAC9B,AAAQ,KAAK,GAAG,KAAK,CAAC;IACtB,AAAiB,YAAY,GAAkC,IAAI,GAAG,EAAE,CAAC;IACzE,AAAiB,aAAa,GAAiC,IAAI,GAAG,EAAE,CAAC;IAEzE,IAAI,EAAE,GAAG;QACR,OAAO,IAAI,CAAC,GAAG,CAAC;KAChB;IAED,IAAI,OAAO,GAAG;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;KACrB;IAED,IAAI,IAAI,GAAG;QACV,OAAO,IAAI,CAAC,KAAK,CAAC;KAClB;IAED,IAAI,MAAM,GAAG;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;KACpB;IAED;;;IAGG,CACH,IAAI,WAAW,GAAW;QACzB,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC;QAE7C,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CACnC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAGzB,OAAO,gBAAgB,CAAC;KACxB;IAED,IAAI,SAAS,GAAG;QACf,OAAO,IAAI,CAAC,UAAU,CAAC;KACvB;IACD,IAAI,YAAY,GAAG;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;IAED,YAAY,GAAyB,EAAE,OAAqB,CAAE;QAC7D,KAAK,EAAE,CAAC;QAER,IAAI,MAAM,AAAoB,AAAC;QAE/B,wBAAwB;QACxB,IAAI,GAAE,IAAI,GAAE,CAAC,WAAW,IAAI,MAAM,EACjC,OAAO,GAAG,GAAE,AAAe,CAAC;aACtB,IAAI,GAAE,EACZ,MAAM,GAAG,GAAE,CAAC,QAAQ,EAAE,CAAC;QAGxB,sBAAsB;QACtB,OAAO,GAAG;YACT,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,yCAAI,CAAC,UAAU;YACrB,IAAI,EAAE,yCAAI,CAAC,UAAU;YACrB,IAAI,EAAE,GAAG;YACT,GAAG,EAAE,yCAAI,CAAC,WAAW;YACrB,KAAK,EAAE,yCAAI,CAAC,WAAW,EAAE;YACzB,MAAM,EAAE,yCAAI,CAAC,aAAa;YAC1B,GAAG,OAAO;SACV,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,4BAA4B;QAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,EAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAG/C,sBAAsB;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAE/C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAG,CAAC;SAE3B;QAED,iDAAiD;QACjD,IACC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,SAAS,IAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,yCAAI,CAAC,UAAU,EAEtC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,yCAAI,CAAC,QAAQ,EAAE,CAAC;aACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,yCAAI,CAAC,UAAU,EAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QAE7B,uCAAuC;QACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAC5B,wCAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAGlD,wCAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,IAAI,yCAAG,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE9C,gBAAgB;QAChB,0BAA0B;QAC1B,IAAI,CAAC,yCAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,yCAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACrD,IAAI,CAAC,aAAa,CACjB,yCAAa,CAAC,mBAAmB,EACjC,6CAA6C,CAC7C,CAAC;YACF,OAAO;SACP;QAED,yBAAyB;QACzB,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,yCAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,yCAAa,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YACzE,OAAO;SACP;QAED,IAAI,MAAM,EACT,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAEzB,IAAI,CAAC,IAAI,CACP,UAAU,EAAE,CACZ,IAAI,CAAC,CAAC,EAAE,GAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QAAA,CAAC,CAClC,KAAK,CAAC,CAAC,KAAK,GAAK,IAAI,CAAC,MAAM,CAAC,yCAAa,CAAC,WAAW,EAAE,KAAK,CAAC;QAAA,CAAC,CAAC;KAEnE;IAED,AAAQ,uBAAuB,GAAW;QACzC,MAAM,MAAM,GAAG,IAAI,yCAAM,CACxB,IAAI,CAAC,QAAQ,CAAC,MAAM,EACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,EACjB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAC1B,AAAC;QAEF,MAAM,CAAC,EAAE,CAAC,yCAAe,CAAC,OAAO,EAAE,CAAC,IAAmB,GAAK;YAC3D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC1B,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,yCAAe,CAAC,KAAK,EAAE,CAAC,KAAa,GAAK;YACnD,IAAI,CAAC,MAAM,CAAC,yCAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,yCAAe,CAAC,YAAY,EAAE,IAAM;YAC7C,IAAI,IAAI,CAAC,YAAY,EACpB,OAAO;YAGR,IAAI,CAAC,SAAS,CAAC,yCAAa,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;YACpE,IAAI,CAAC,UAAU,EAAE,CAAC;SAClB,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,yCAAe,CAAC,KAAK,EAAE,IAAM;YACtC,IAAI,IAAI,CAAC,YAAY,EACpB,OAAO;YAGR,IAAI,CAAC,MAAM,CACV,yCAAa,CAAC,YAAY,EAC1B,sCAAsC,CACtC,CAAC;SACF,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;KACd;IAED,+CAA+C,CAC/C,AAAQ,WAAW,CAAC,EAAU,EAAQ;QACrC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;KAC5C;IAED,wCAAwC,CACxC,AAAQ,cAAc,CAAC,OAAsB,EAAQ;QACpD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,AAAC;QAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;QAChC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,AAAC;QAE3B,OAAQ,IAAI;YACX,KAAK,yCAAiB,CAAC,IAAI;gBAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvC,MAAM;YACP,KAAK,yCAAiB,CAAC,KAAK;gBAC3B,IAAI,CAAC,MAAM,CAAC,yCAAa,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;gBACpD,MAAM;YACP,KAAK,yCAAiB,CAAC,OAAO;gBAC7B,IAAI,CAAC,MAAM,CAAC,yCAAa,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrE,MAAM;YACP,KAAK,yCAAiB,CAAC,UAAU;gBAChC,IAAI,CAAC,MAAM,CACV,yCAAa,CAAC,UAAU,EACxB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAC3C,CAAC;gBACF,MAAM;YACP,KAAK,yCAAiB,CAAC,KAAK;gBAC3B,wCAAM,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACjC,MAAM;YACP,KAAK,yCAAiB,CAAC,MAAM;gBAC5B,IAAI,CAAC,SAAS,CACb,yCAAa,CAAC,eAAe,EAC7B,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC,CACrC,CAAC;gBACF,MAAM;YACP,KAAK,yCAAiB,CAAC,KAAK;gBAAE;oBAC7B,4FAA4F;oBAC5F,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,AAAC;oBAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,AAAC;oBAE1D,IAAI,UAAU,EAAE;wBACf,UAAU,CAAC,KAAK,EAAE,CAAC;wBACnB,wCAAM,CAAC,IAAI,CACV,CAAC,0CAA0C,EAAE,YAAY,CAAC,CAAC,CAC3D,CAAC;qBACF;oBAED,2BAA2B;oBAC3B,IAAI,OAAO,CAAC,IAAI,KAAK,yCAAc,CAAC,KAAK,EAAE;wBAC1C,UAAU,GAAG,IAAI,yCAAe,CAAC,MAAM,EAAE,IAAI,EAAE;4BAC9C,YAAY,EAAE,YAAY;4BAC1B,QAAQ,EAAE,OAAO;4BACjB,QAAQ,EAAE,OAAO,CAAC,QAAQ;yBAC1B,CAAC,CAAC;wBACH,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;wBACxC,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;qBAC1C,MAAM,IAAI,OAAO,CAAC,IAAI,KAAK,yCAAc,CAAC,IAAI,EAAE;wBAChD,UAAU,GAAG,IAAI,yCAAc,CAAC,MAAM,EAAE,IAAI,EAAE;4BAC7C,YAAY,EAAE,YAAY;4BAC1B,QAAQ,EAAE,OAAO;4BACjB,QAAQ,EAAE,OAAO,CAAC,QAAQ;4BAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;4BACpB,aAAa,EAAE,OAAO,CAAC,aAAa;4BACpC,QAAQ,EAAE,OAAO,CAAC,QAAQ;yBAC1B,CAAC,CAAC;wBACH,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;wBACxC,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;qBAChD,MAAM;wBACN,wCAAM,CAAC,IAAI,CAAC,CAAC,mCAAmC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClE,OAAO;qBACP;oBAED,iBAAiB;oBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,AAAC;oBACjD,KAAK,IAAI,OAAO,IAAI,QAAQ,CAC3B,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oBAGnC,MAAM;iBACN;YACD;gBAAS;oBACR,IAAI,CAAC,OAAO,EAAE;wBACb,wCAAM,CAAC,IAAI,CACV,CAAC,sCAAsC,EAAE,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CACjE,CAAC;wBACF,OAAO;qBACP;oBAED,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,AAAC;oBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,AAAC;oBAE5D,IAAI,UAAU,IAAI,UAAU,CAAC,cAAc,EAC1C,cAAc;oBACd,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;yBAC5B,IAAI,YAAY,EACtB,+BAA+B;oBAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;yBAE1C,wCAAM,CAAC,IAAI,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAC;oBAE/D,MAAM;iBACN;SACD;KACD;IAED,wEAAwE,CACxE,AAAQ,aAAa,CAAC,YAAoB,EAAE,OAAsB,EAAQ;QACzE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,EACxC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAG1C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnD;IAED,gDAAgD,CAChD,2BAA2B;IAC3B,AAAO,YAAY,CAAC,YAAoB,EAAmB;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,AAAC;QAEtD,IAAI,QAAQ,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACxC,OAAO,QAAQ,CAAC;SAChB;QAED,OAAO,EAAE,CAAC;KACV;IAED;;;IAGG,CACH,OAAO,CAAC,IAAY,EAAE,OAA0B,GAAG,EAAE,EAAkB;QACtE,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,wCAAM,CAAC,IAAI,CACV,+OAG4D,CAC5D,CAAC;YACF,IAAI,CAAC,SAAS,CACb,yCAAa,CAAC,YAAY,EAC1B,6DAA6D,CAC7D,CAAC;YACF,OAAO;SACP;QAED,MAAM,cAAc,GAAG,IAAI,yCAAc,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,AAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAC1C,OAAO,cAAc,CAAC;KACtB;IAED;;;IAGG,CACH,IAAI,CAAC,IAAY,EAAE,MAAmB,EAAE,OAAY,GAAG,EAAE,EAAmB;QAC3E,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,wCAAM,CAAC,IAAI,CACV,mKAEkD,CAClD,CAAC;YACF,IAAI,CAAC,SAAS,CACb,yCAAa,CAAC,YAAY,EAC1B,6DAA6D,CAC7D,CAAC;YACF,OAAO;SACP;QAED,IAAI,CAAC,MAAM,EAAE;YACZ,wCAAM,CAAC,KAAK,CACX,+EAA+E,CAC/E,CAAC;YACF,OAAO;SACP;QAED,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC;QAEzB,MAAM,eAAe,GAAG,IAAI,yCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,AAAC;QACjE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAC3C,OAAO,eAAe,CAAC;KACvB;IAED,gDAAgD,CAChD,AAAQ,cAAc,CAAC,MAAc,EAAE,UAA0B,EAAQ;QACxE,wCAAM,CAAC,GAAG,CACT,CAAC,eAAe,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAClF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/C;IAED,wBAAwB;IACxB,iBAAiB,CAAC,UAA0B,EAAQ;QACnD,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;QAE3D,IAAI,WAAW,EAAE;YAChB,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,AAAC;YAE9C,IAAI,KAAK,KAAK,EAAE,EACf,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAE9B;QAED,2BAA2B;QAC3B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;KACnD;IAED,sDAAsD,CACtD,aAAa,CAAC,MAAc,EAAE,YAAoB,EAAyB;QAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,AAAC;QAClD,IAAI,CAAC,WAAW,EACf,OAAO,IAAI,CAAC;QAGb,KAAK,IAAI,UAAU,IAAI,WAAW,CAAE;YACnC,IAAI,UAAU,CAAC,YAAY,KAAK,YAAY,EAC3C,OAAO,UAAU,CAAC;SAEnB;QAED,OAAO,IAAI,CAAC;KACZ;IAED,AAAQ,aAAa,CAAC,IAAmB,EAAE,OAAuB,EAAQ;QACzE,UAAU,CAAC,IAAM;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAC3B,EAAE,CAAC,CAAC,CAAC;KACN;IAED;;;;IAIG,CACH,AAAQ,MAAM,CAAC,IAAmB,EAAE,OAAuB,EAAQ;QAClE,wCAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,CAAC,aAAa,EACtB,IAAI,CAAC,OAAO,EAAE,CAAC;aAEf,IAAI,CAAC,UAAU,EAAE,CAAC;KAEnB;IAED,mCAAmC,CACnC,SAAS,CAAC,IAAmB,EAAE,GAAmB,EAAQ;QACzD,wCAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAE5B,IAAI,KAAK,AAAkC,AAAC;QAE5C,IAAI,OAAO,GAAG,KAAK,QAAQ,EAC1B,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;aAEvB,KAAK,GAAG,GAAG,AAAS,CAAC;QAGtB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACtC;IAED;;;;;IAKG,CACH,OAAO,GAAS;QACf,IAAI,IAAI,CAAC,SAAS,EACjB,OAAO;QAGR,wCAAM,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,iDAAiD,CACjD,AAAQ,QAAQ,GAAS;QACxB,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAE;YAC5C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;KACjC;IAED,2CAA2C,CAC3C,AAAQ,YAAY,CAAC,MAAc,EAAQ;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,AAAC;QAElD,IAAI,CAAC,WAAW,EAAE,OAAO;QAEzB,KAAK,IAAI,UAAU,IAAI,WAAW,CACjC,UAAU,CAAC,KAAK,EAAE,CAAC;KAEpB;IAED;;;;;IAKG,CACH,UAAU,GAAS;QAClB,IAAI,IAAI,CAAC,YAAY,EACpB,OAAO;QAGR,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,AAAC;QAE1B,wCAAM,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,IAAI,CAAC,yCAAa,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KACjD;IAED,8CAA8C,CAC9C,SAAS,GAAS;QACjB,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACzC,wCAAM,CAAC,GAAG,CACT,CAAC,0CAA0C,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CACjE,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAE,CAAC;SACtC,MAAM,IAAI,IAAI,CAAC,SAAS,EACxB,MAAM,IAAI,KAAK,CACd,0EAA0E,CAC1E,CAAC;aACI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,EAC1C,qDAAqD;QACrD,wCAAM,CAAC,KAAK,CACX,gEAAgE,CAChE,CAAC;aAEF,MAAM,IAAI,KAAK,CACd,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,iEAAiE,CAAC,CAClF,CAAC;KAEH;IAED;;;;;IAKG,CACH,YAAY,CAAC,EAAE,GAAG,CAAC,CAAQ,GAAK,EAAE,EAAQ;QACzC,IAAI,CAAC,IAAI,CACP,YAAY,EAAE,CACd,IAAI,CAAC,CAAC,KAAK,GAAK,EAAE,CAAC,KAAK,CAAC;QAAA,CAAC,CAC1B,KAAK,CAAC,CAAC,KAAK,GAAK,IAAI,CAAC,MAAM,CAAC,yCAAa,CAAC,WAAW,EAAE,KAAK,CAAC;QAAA,CAAC,CAAC;KAClE;CACD;;;IHxkBD,wCAAoB,GAAL,yCAAI","sources":["lib/exports.ts","lib/util.ts","lib/supports.ts","lib/peer.ts","lib/logger.ts","lib/socket.ts","lib/enums.ts","package.json","lib/mediaconnection.ts","lib/negotiator.ts","lib/baseconnection.ts","lib/dataconnection.ts","lib/encodingQueue.ts","lib/api.ts"],"sourcesContent":["import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport type { DataConnection } from \"./dataconnection\";\nexport type { MediaConnection } from \"./mediaconnection\";\n\nexport { Peer, util };\nexport default Peer;\n","import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from \"./supports\";\n\ninterface UtilSupportsObj {\n\tbrowser: boolean;\n\twebRTC: boolean;\n\taudioVideo: boolean;\n\tdata: boolean;\n\tbinaryBlob: boolean;\n\treliable: boolean;\n}\n\nconst DEFAULT_CONFIG = {\n\ticeServers: [\n\t\t{ urls: \"stun:stun.l.google.com:19302\" },\n\t\t{\n\t\t\turls: [\n\t\t\t\t\"turn:eu-0.turn.peerjs.com:3478\",\n\t\t\t\t\"turn:eu-1.turn.peerjs.com:3478\",\n\t\t\t],\n\t\t\tusername: \"peerjs\",\n\t\t\tcredential: \"peerjsp\",\n\t\t},\n\t\t{\n\t\t\turls: [\n\t\t\t\t\"turn:us-0.turn.peerjs.com:3478\",\n\t\t\t\t\"turn:us-1.turn.peerjs.com:3478\",\n\t\t\t],\n\t\t\tusername: \"peerjs\",\n\t\t\tcredential: \"peerjsp\",\n\t\t},\n\t],\n\tsdpSemantics: \"unified-plan\",\n};\n\nclass Util {\n\tnoop(): void {}\n\n\treadonly CLOUD_HOST = \"0.peerjs.com\";\n\treadonly CLOUD_PORT = 443;\n\n\t// Browsers that need chunking:\n\treadonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n\treadonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n\t// Returns browser-agnostic default config\n\treadonly defaultConfig = DEFAULT_CONFIG;\n\n\treadonly browser = Supports.getBrowser();\n\treadonly browserVersion = Supports.getVersion();\n\n\t// Lists which features are supported\n\treadonly supports = (function () {\n\t\tconst supported: UtilSupportsObj = {\n\t\t\tbrowser: Supports.isBrowserSupported(),\n\t\t\twebRTC: Supports.isWebRTCSupported(),\n\t\t\taudioVideo: false,\n\t\t\tdata: false,\n\t\t\tbinaryBlob: false,\n\t\t\treliable: false,\n\t\t};\n\n\t\tif (!supported.webRTC) return supported;\n\n\t\tlet pc: RTCPeerConnection;\n\n\t\ttry {\n\t\t\tpc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n\t\t\tsupported.audioVideo = true;\n\n\t\t\tlet dc: RTCDataChannel;\n\n\t\t\ttry {\n\t\t\t\tdc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n\t\t\t\tsupported.data = true;\n\t\t\t\tsupported.reliable = !!dc.ordered;\n\n\t\t\t\t// Binary test\n\t\t\t\ttry {\n\t\t\t\t\tdc.binaryType = \"blob\";\n\t\t\t\t\tsupported.binaryBlob = !Supports.isIOS;\n\t\t\t\t} catch (e) {}\n\t\t\t} catch (e) {\n\t\t\t} finally {\n\t\t\t\tif (dc) {\n\t\t\t\t\tdc.close();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (pc) {\n\t\t\t\tpc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t})();\n\n\t// Ensure alphanumeric ids\n\tvalidateId(id: string): boolean {\n\t\t// Allow empty ids\n\t\treturn !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n\t}\n\n\tpack = BinaryPack.pack;\n\tunpack = BinaryPack.unpack;\n\n\t// Binary stuff\n\n\tprivate _dataCount: number = 1;\n\n\tchunk(\n\t\tblob: Blob,\n\t): { __peerData: number; n: number; total: number; data: Blob }[] {\n\t\tconst chunks = [];\n\t\tconst size = blob.size;\n\t\tconst total = Math.ceil(size / util.chunkedMTU);\n\n\t\tlet index = 0;\n\t\tlet start = 0;\n\n\t\twhile (start < size) {\n\t\t\tconst end = Math.min(size, start + util.chunkedMTU);\n\t\t\tconst b = blob.slice(start, end);\n\n\t\t\tconst chunk = {\n\t\t\t\t__peerData: this._dataCount,\n\t\t\t\tn: index,\n\t\t\t\tdata: b,\n\t\t\t\ttotal,\n\t\t\t};\n\n\t\t\tchunks.push(chunk);\n\n\t\t\tstart = end;\n\t\t\tindex++;\n\t\t}\n\n\t\tthis._dataCount++;\n\n\t\treturn chunks;\n\t}\n\n\tblobToArrayBuffer(\n\t\tblob: Blob,\n\t\tcb: (arg: ArrayBuffer | null) => void,\n\t): FileReader {\n\t\tconst fr = new FileReader();\n\n\t\tfr.onload = function (evt) {\n\t\t\tif (evt.target) {\n\t\t\t\tcb(evt.target.result as ArrayBuffer);\n\t\t\t}\n\t\t};\n\n\t\tfr.readAsArrayBuffer(blob);\n\n\t\treturn fr;\n\t}\n\n\tbinaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n\t\tconst byteArray = new Uint8Array(binary.length);\n\n\t\tfor (let i = 0; i < binary.length; i++) {\n\t\t\tbyteArray[i] = binary.charCodeAt(i) & 0xff;\n\t\t}\n\n\t\treturn byteArray.buffer;\n\t}\n\n\trandomToken(): string {\n\t\treturn Math.random().toString(36).slice(2);\n\t}\n\n\tisSecure(): boolean {\n\t\treturn location.protocol === \"https:\";\n\t}\n}\nexport const util = new Util();\n","import webRTCAdapter from \"webrtc-adapter\";\n\nexport const Supports = new (class {\n\treadonly isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform);\n\treadonly supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"];\n\n\treadonly minFirefoxVersion = 59;\n\treadonly minChromeVersion = 72;\n\treadonly minSafariVersion = 605;\n\n\tisWebRTCSupported(): boolean {\n\t\treturn typeof RTCPeerConnection !== \"undefined\";\n\t}\n\n\tisBrowserSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = this.getVersion();\n\n\t\tconst validBrowser = this.supportedBrowsers.includes(browser);\n\n\t\tif (!validBrowser) return false;\n\n\t\tif (browser === \"chrome\") return version >= this.minChromeVersion;\n\t\tif (browser === \"firefox\") return version >= this.minFirefoxVersion;\n\t\tif (browser === \"safari\")\n\t\t\treturn !this.isIOS && version >= this.minSafariVersion;\n\n\t\treturn false;\n\t}\n\n\tgetBrowser(): string {\n\t\treturn webRTCAdapter.browserDetails.browser;\n\t}\n\n\tgetVersion(): number {\n\t\treturn webRTCAdapter.browserDetails.version || 0;\n\t}\n\n\tisUnifiedPlanSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = webRTCAdapter.browserDetails.version || 0;\n\n\t\tif (browser === \"chrome\" && version < this.minChromeVersion) return false;\n\t\tif (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n\t\tif (\n\t\t\t!window.RTCRtpTransceiver ||\n\t\t\t!(\"currentDirection\" in RTCRtpTransceiver.prototype)\n\t\t)\n\t\t\treturn false;\n\n\t\tlet tempPc: RTCPeerConnection;\n\t\tlet supported = false;\n\n\t\ttry {\n\t\t\ttempPc = new RTCPeerConnection();\n\t\t\ttempPc.addTransceiver(\"audio\");\n\t\t\tsupported = true;\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (tempPc) {\n\t\t\t\ttempPc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t}\n\n\ttoString(): string {\n\t\treturn `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n\t}\n})();\n","import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tPeerEventType,\n\tSocketEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport type { PeerConnectOption, PeerJSOption } from \"./optionInterfaces\";\n\nclass PeerOptions implements PeerJSOption {\n\tdebug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n\thost?: string;\n\tport?: number;\n\tpath?: string;\n\tkey?: string;\n\ttoken?: string;\n\tconfig?: any;\n\tsecure?: boolean;\n\tpingInterval?: number;\n\tlogFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n\tprivate static readonly DEFAULT_KEY = \"peerjs\";\n\n\tprivate readonly _options: PeerOptions;\n\tprivate readonly _api: API;\n\tprivate readonly _socket: Socket;\n\n\tprivate _id: string | null = null;\n\tprivate _lastServerId: string | null = null;\n\n\t// States.\n\tprivate _destroyed = false; // Connections have been killed\n\tprivate _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n\tprivate _open = false; // Sockets and such are not yet open.\n\tprivate readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n\tprivate readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tget socket() {\n\t\treturn this._socket;\n\t}\n\n\t/**\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */\n\tget connections(): Object {\n\t\tconst plainConnections = Object.create(null);\n\n\t\tfor (let [k, v] of this._connections) {\n\t\t\tplainConnections[k] = v;\n\t\t}\n\n\t\treturn plainConnections;\n\t}\n\n\tget destroyed() {\n\t\treturn this._destroyed;\n\t}\n\tget disconnected() {\n\t\treturn this._disconnected;\n\t}\n\n\tconstructor(id?: string | PeerOptions, options?: PeerOptions) {\n\t\tsuper();\n\n\t\tlet userId: string | undefined;\n\n\t\t// Deal with overloading\n\t\tif (id && id.constructor == Object) {\n\t\t\toptions = id as PeerOptions;\n\t\t} else if (id) {\n\t\t\tuserId = id.toString();\n\t\t}\n\n\t\t// Configurize options\n\t\toptions = {\n\t\t\tdebug: 0, // 1: Errors, 2: Warnings, 3: All logs\n\t\t\thost: util.CLOUD_HOST,\n\t\t\tport: util.CLOUD_PORT,\n\t\t\tpath: \"/\",\n\t\t\tkey: Peer.DEFAULT_KEY,\n\t\t\ttoken: util.randomToken(),\n\t\t\tconfig: util.defaultConfig,\n\t\t\t...options,\n\t\t};\n\t\tthis._options = options;\n\n\t\t// Detect relative URL host.\n\t\tif (this._options.host === \"/\") {\n\t\t\tthis._options.host = window.location.hostname;\n\t\t}\n\n\t\t// Set path correctly.\n\t\tif (this._options.path) {\n\t\t\tif (this._options.path[0] !== \"/\") {\n\t\t\t\tthis._options.path = \"/\" + this._options.path;\n\t\t\t}\n\t\t\tif (this._options.path[this._options.path.length - 1] !== \"/\") {\n\t\t\t\tthis._options.path += \"/\";\n\t\t\t}\n\t\t}\n\n\t\t// Set whether we use SSL to same as current host\n\t\tif (\n\t\t\tthis._options.secure === undefined &&\n\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t) {\n\t\t\tthis._options.secure = util.isSecure();\n\t\t} else if (this._options.host == util.CLOUD_HOST) {\n\t\t\tthis._options.secure = true;\n\t\t}\n\t\t// Set a custom log function if present\n\t\tif (this._options.logFunction) {\n\t\t\tlogger.setLogFunction(this._options.logFunction);\n\t\t}\n\n\t\tlogger.logLevel = this._options.debug || 0;\n\n\t\tthis._api = new API(options);\n\t\tthis._socket = this._createServerConnection();\n\n\t\t// Sanity checks\n\t\t// Ensure WebRTC supported\n\t\tif (!util.supports.audioVideo && !util.supports.data) {\n\t\t\tthis._delayedAbort(\n\t\t\t\tPeerErrorType.BrowserIncompatible,\n\t\t\t\t\"The current browser does not support WebRTC\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure alphanumeric id\n\t\tif (!!userId && !util.validateId(userId)) {\n\t\t\tthis._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis._initialize(userId);\n\t\t} else {\n\t\t\tthis._api\n\t\t\t\t.retrieveId()\n\t\t\t\t.then((id) => this._initialize(id))\n\t\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t\t}\n\t}\n\n\tprivate _createServerConnection(): Socket {\n\t\tconst socket = new Socket(\n\t\t\tthis._options.secure,\n\t\t\tthis._options.host!,\n\t\t\tthis._options.port!,\n\t\t\tthis._options.path!,\n\t\t\tthis._options.key!,\n\t\t\tthis._options.pingInterval,\n\t\t);\n\n\t\tsocket.on(SocketEventType.Message, (data: ServerMessage) => {\n\t\t\tthis._handleMessage(data);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Error, (error: string) => {\n\t\t\tthis._abort(PeerErrorType.SocketError, error);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Disconnected, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tsocket.on(SocketEventType.Close, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._abort(\n\t\t\t\tPeerErrorType.SocketClosed,\n\t\t\t\t\"Underlying socket is already closed.\",\n\t\t\t);\n\t\t});\n\n\t\treturn socket;\n\t}\n\n\t/** Initialize a connection with the server. */\n\tprivate _initialize(id: string): void {\n\t\tthis._id = id;\n\t\tthis.socket.start(id, this._options.token!);\n\t}\n\n\t/** Handles messages from the server. */\n\tprivate _handleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\t\tconst peerId = message.src;\n\n\t\tswitch (type) {\n\t\t\tcase ServerMessageType.Open: // The connection to the server is open.\n\t\t\t\tthis._lastServerId = this.id;\n\t\t\t\tthis._open = true;\n\t\t\t\tthis.emit(PeerEventType.Open, this.id);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Error: // Server error.\n\t\t\t\tthis._abort(PeerErrorType.ServerError, payload.msg);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.IdTaken: // The selected ID is taken.\n\t\t\t\tthis._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.InvalidKey: // The given API key cannot be found.\n\t\t\t\tthis._abort(\n\t\t\t\t\tPeerErrorType.InvalidKey,\n\t\t\t\t\t`API KEY \"${this._options.key}\" is invalid`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n\t\t\t\tlogger.log(`Received leave message from ${peerId}`);\n\t\t\t\tthis._cleanupPeer(peerId);\n\t\t\t\tthis._connections.delete(peerId);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n\t\t\t\tthis.emitError(\n\t\t\t\t\tPeerErrorType.PeerUnavailable,\n\t\t\t\t\t`Could not connect to peer ${peerId}`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Offer: {\n\t\t\t\t// we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tlet connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection) {\n\t\t\t\t\tconnection.close();\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`Offer received for existing Connection ID:${connectionId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Create a new connection.\n\t\t\t\tif (payload.type === ConnectionType.Media) {\n\t\t\t\t\tconnection = new MediaConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t});\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(PeerEventType.Call, connection);\n\t\t\t\t} else if (payload.type === ConnectionType.Data) {\n\t\t\t\t\tconnection = new DataConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t\tlabel: payload.label,\n\t\t\t\t\t\tserialization: payload.serialization,\n\t\t\t\t\t\treliable: payload.reliable,\n\t\t\t\t\t});\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(PeerEventType.Connection, connection);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(`Received malformed connection type:${payload.type}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Find messages.\n\t\t\t\tconst messages = this._getMessages(connectionId);\n\t\t\t\tfor (let message of messages) {\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (!payload) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`You received a malformed message from ${peerId} of type ${type}`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tconst connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection && connection.peerConnection) {\n\t\t\t\t\t// Pass it on.\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t} else if (connectionId) {\n\t\t\t\t\t// Store for possible later use\n\t\t\t\t\tthis._storeMessage(connectionId, message);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"You received an unrecognized message:\", message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Stores messages without a set up connection, to be claimed later. */\n\tprivate _storeMessage(connectionId: string, message: ServerMessage): void {\n\t\tif (!this._lostMessages.has(connectionId)) {\n\t\t\tthis._lostMessages.set(connectionId, []);\n\t\t}\n\n\t\tthis._lostMessages.get(connectionId).push(message);\n\t}\n\n\t/** Retrieve messages from lost message store */\n\t//TODO Change it to private\n\tpublic _getMessages(connectionId: string): ServerMessage[] {\n\t\tconst messages = this._lostMessages.get(connectionId);\n\n\t\tif (messages) {\n\t\t\tthis._lostMessages.delete(connectionId);\n\t\t\treturn messages;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns a DataConnection to the specified peer. See documentation for a\n\t * complete list of options.\n\t */\n\tconnect(peer: string, options: PeerConnectOption = {}): DataConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect, or call reconnect \" +\n\t\t\t\t\t\"on this peer if you believe its ID to still be available.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataConnection = new DataConnection(peer, this, options);\n\t\tthis._addConnection(peer, dataConnection);\n\t\treturn dataConnection;\n\t}\n\n\t/**\n\t * Returns a MediaConnection to the specified peer. See documentation for a\n\t * complete list of options.\n\t */\n\tcall(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!stream) {\n\t\t\tlogger.error(\n\t\t\t\t\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\toptions._stream = stream;\n\n\t\tconst mediaConnection = new MediaConnection(peer, this, options);\n\t\tthis._addConnection(peer, mediaConnection);\n\t\treturn mediaConnection;\n\t}\n\n\t/** Add a data/media connection to this peer. */\n\tprivate _addConnection(peerId: string, connection: BaseConnection): void {\n\t\tlogger.log(\n\t\t\t`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`,\n\t\t);\n\n\t\tif (!this._connections.has(peerId)) {\n\t\t\tthis._connections.set(peerId, []);\n\t\t}\n\t\tthis._connections.get(peerId).push(connection);\n\t}\n\n\t//TODO should be private\n\t_removeConnection(connection: BaseConnection): void {\n\t\tconst connections = this._connections.get(connection.peer);\n\n\t\tif (connections) {\n\t\t\tconst index = connections.indexOf(connection);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tconnections.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t//remove from lost messages\n\t\tthis._lostMessages.delete(connection.connectionId);\n\t}\n\n\t/** Retrieve a data/media connection for this peer. */\n\tgetConnection(peerId: string, connectionId: string): null | BaseConnection {\n\t\tconst connections = this._connections.get(peerId);\n\t\tif (!connections) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let connection of connections) {\n\t\t\tif (connection.connectionId === connectionId) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _delayedAbort(type: PeerErrorType, message: string | Error): void {\n\t\tsetTimeout(() => {\n\t\t\tthis._abort(type, message);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */\n\tprivate _abort(type: PeerErrorType, message: string | Error): void {\n\t\tlogger.error(\"Aborting!\");\n\n\t\tthis.emitError(type, message);\n\n\t\tif (!this._lastServerId) {\n\t\t\tthis.destroy();\n\t\t} else {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\t/** Emits a typed error message. */\n\temitError(type: PeerErrorType, err: string | Error): void {\n\t\tlogger.error(\"Error:\", err);\n\n\t\tlet error: Error & { type?: PeerErrorType };\n\n\t\tif (typeof err === \"string\") {\n\t\t\terror = new Error(err);\n\t\t} else {\n\t\t\terror = err as Error;\n\t\t}\n\n\t\terror.type = type;\n\n\t\tthis.emit(PeerEventType.Error, error);\n\t}\n\n\t/**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t *  to the server.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  destroyed.\n\t */\n\tdestroy(): void {\n\t\tif (this.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.log(`Destroy peer with ID:${this.id}`);\n\n\t\tthis.disconnect();\n\t\tthis._cleanup();\n\n\t\tthis._destroyed = true;\n\n\t\tthis.emit(PeerEventType.Close);\n\t}\n\n\t/** Disconnects every connection on this peer. */\n\tprivate _cleanup(): void {\n\t\tfor (let peerId of this._connections.keys()) {\n\t\t\tthis._cleanupPeer(peerId);\n\t\t\tthis._connections.delete(peerId);\n\t\t}\n\n\t\tthis.socket.removeAllListeners();\n\t}\n\n\t/** Closes all connections to this peer. */\n\tprivate _cleanupPeer(peerId: string): void {\n\t\tconst connections = this._connections.get(peerId);\n\n\t\tif (!connections) return;\n\n\t\tfor (let connection of connections) {\n\t\t\tconnection.close();\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */\n\tdisconnect(): void {\n\t\tif (this.disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentId = this.id;\n\n\t\tlogger.log(`Disconnect peer with ID:${currentId}`);\n\n\t\tthis._disconnected = true;\n\t\tthis._open = false;\n\n\t\tthis.socket.close();\n\n\t\tthis._lastServerId = currentId;\n\t\tthis._id = null;\n\n\t\tthis.emit(PeerEventType.Disconnected, currentId);\n\t}\n\n\t/** Attempts to reconnect with the same ID. */\n\treconnect(): void {\n\t\tif (this.disconnected && !this.destroyed) {\n\t\t\tlogger.log(\n\t\t\t\t`Attempting reconnection to server with ID ${this._lastServerId}`,\n\t\t\t);\n\t\t\tthis._disconnected = false;\n\t\t\tthis._initialize(this._lastServerId!);\n\t\t} else if (this.destroyed) {\n\t\t\tthrow new Error(\n\t\t\t\t\"This peer cannot reconnect to the server. It has already been destroyed.\",\n\t\t\t);\n\t\t} else if (!this.disconnected && !this.open) {\n\t\t\t// Do nothing. We're still connecting the first time.\n\t\t\tlogger.error(\n\t\t\t\t\"In a hurry? We're still trying to make the initial connection!\",\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */\n\tlistAllPeers(cb = (_: any[]) => {}): void {\n\t\tthis._api\n\t\t\t.listAllPeers()\n\t\t\t.then((peers) => cb(peers))\n\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t}\n}\n","const LOG_PREFIX = \"PeerJS: \";\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n\tDisabled,\n\tErrors,\n\tWarnings,\n\tAll,\n}\n\nclass Logger {\n\tprivate _logLevel = LogLevel.Disabled;\n\n\tget logLevel(): LogLevel {\n\t\treturn this._logLevel;\n\t}\n\n\tset logLevel(logLevel: LogLevel) {\n\t\tthis._logLevel = logLevel;\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.All) {\n\t\t\tthis._print(LogLevel.All, ...args);\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Warnings) {\n\t\t\tthis._print(LogLevel.Warnings, ...args);\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Errors) {\n\t\t\tthis._print(LogLevel.Errors, ...args);\n\t\t}\n\t}\n\n\tsetLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n\t\tthis._print = fn;\n\t}\n\n\tprivate _print(logLevel: LogLevel, ...rest: any[]): void {\n\t\tconst copy = [LOG_PREFIX, ...rest];\n\n\t\tfor (let i in copy) {\n\t\t\tif (copy[i] instanceof Error) {\n\t\t\t\tcopy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\t\t\t}\n\t\t}\n\n\t\tif (logLevel >= LogLevel.All) {\n\t\t\tconsole.log(...copy);\n\t\t} else if (logLevel >= LogLevel.Warnings) {\n\t\t\tconsole.warn(\"WARNING\", ...copy);\n\t\t} else if (logLevel >= LogLevel.Errors) {\n\t\t\tconsole.error(\"ERROR\", ...copy);\n\t\t}\n\t}\n}\n\nexport default new Logger();\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\nimport { version } from \"../package.json\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n\tprivate _disconnected: boolean = true;\n\tprivate _id?: string;\n\tprivate _messagesQueue: Array<object> = [];\n\tprivate _socket?: WebSocket;\n\tprivate _wsPingTimer?: any;\n\tprivate readonly _baseUrl: string;\n\n\tconstructor(\n\t\tsecure: any,\n\t\thost: string,\n\t\tport: number,\n\t\tpath: string,\n\t\tkey: string,\n\t\tprivate readonly pingInterval: number = 5000,\n\t) {\n\t\tsuper();\n\n\t\tconst wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n\t\tthis._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n\t}\n\n\tstart(id: string, token: string): void {\n\t\tthis._id = id;\n\n\t\tconst wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n\t\tif (!!this._socket || !this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._socket = new WebSocket(wsUrl + \"&version=\" + version);\n\t\tthis._disconnected = false;\n\n\t\tthis._socket.onmessage = (event) => {\n\t\t\tlet data;\n\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(event.data);\n\t\t\t\tlogger.log(\"Server message received:\", data);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.log(\"Invalid server message\", event.data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emit(SocketEventType.Message, data);\n\t\t};\n\n\t\tthis._socket.onclose = (event) => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.log(\"Socket closed.\", event);\n\n\t\t\tthis._cleanup();\n\t\t\tthis._disconnected = true;\n\n\t\t\tthis.emit(SocketEventType.Disconnected);\n\t\t};\n\n\t\t// Take care of the queue of connections if necessary and make sure Peer knows\n\t\t// socket is open.\n\t\tthis._socket.onopen = () => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._sendQueuedMessages();\n\n\t\t\tlogger.log(\"Socket open\");\n\n\t\t\tthis._scheduleHeartbeat();\n\t\t};\n\t}\n\n\tprivate _scheduleHeartbeat(): void {\n\t\tthis._wsPingTimer = setTimeout(() => {\n\t\t\tthis._sendHeartbeat();\n\t\t}, this.pingInterval);\n\t}\n\n\tprivate _sendHeartbeat(): void {\n\t\tif (!this._wsOpen()) {\n\t\t\tlogger.log(`Cannot send heartbeat, because socket closed`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n\t\tthis._socket!.send(message);\n\n\t\tthis._scheduleHeartbeat();\n\t}\n\n\t/** Is the websocket currently open? */\n\tprivate _wsOpen(): boolean {\n\t\treturn !!this._socket && this._socket.readyState === 1;\n\t}\n\n\t/** Send queued messages. */\n\tprivate _sendQueuedMessages(): void {\n\t\t//Create copy of queue and clear it,\n\t\t//because send method push the message back to queue if smth will go wrong\n\t\tconst copiedQueue = [...this._messagesQueue];\n\t\tthis._messagesQueue = [];\n\n\t\tfor (const message of copiedQueue) {\n\t\t\tthis.send(message);\n\t\t}\n\t}\n\n\t/** Exposed send for DC & Peer. */\n\tsend(data: any): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we didn't get an ID yet, we can't yet send anything so we should queue\n\t\t// up these messages.\n\t\tif (!this._id) {\n\t\t\tthis._messagesQueue.push(data);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!data.type) {\n\t\t\tthis.emit(SocketEventType.Error, \"Invalid message\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._wsOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify(data);\n\n\t\tthis._socket!.send(message);\n\t}\n\n\tclose(): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanup();\n\n\t\tthis._disconnected = true;\n\t}\n\n\tprivate _cleanup(): void {\n\t\tif (this._socket) {\n\t\t\tthis._socket.onopen =\n\t\t\t\tthis._socket.onmessage =\n\t\t\t\tthis._socket.onclose =\n\t\t\t\t\tnull;\n\t\t\tthis._socket.close();\n\t\t\tthis._socket = undefined;\n\t\t}\n\n\t\tclearTimeout(this._wsPingTimer!);\n\t}\n}\n","export enum ConnectionEventType {\n\tOpen = \"open\",\n\tStream = \"stream\",\n\tData = \"data\",\n\tClose = \"close\",\n\tError = \"error\",\n\tIceStateChanged = \"iceStateChanged\",\n}\n\nexport enum ConnectionType {\n\tData = \"data\",\n\tMedia = \"media\",\n}\n\nexport enum PeerEventType {\n\tOpen = \"open\",\n\tClose = \"close\",\n\tConnection = \"connection\",\n\tCall = \"call\",\n\tDisconnected = \"disconnected\",\n\tError = \"error\",\n}\n\nexport enum PeerErrorType {\n\tBrowserIncompatible = \"browser-incompatible\",\n\tDisconnected = \"disconnected\",\n\tInvalidID = \"invalid-id\",\n\tInvalidKey = \"invalid-key\",\n\tNetwork = \"network\",\n\tPeerUnavailable = \"peer-unavailable\",\n\tSslUnavailable = \"ssl-unavailable\",\n\tServerError = \"server-error\",\n\tSocketError = \"socket-error\",\n\tSocketClosed = \"socket-closed\",\n\tUnavailableID = \"unavailable-id\",\n\tWebRTC = \"webrtc\",\n}\n\nexport enum SerializationType {\n\tBinary = \"binary\",\n\tBinaryUTF8 = \"binary-utf8\",\n\tJSON = \"json\",\n}\n\nexport enum SocketEventType {\n\tMessage = \"message\",\n\tDisconnected = \"disconnected\",\n\tError = \"error\",\n\tClose = \"close\",\n}\n\nexport enum ServerMessageType {\n\tHeartbeat = \"HEARTBEAT\",\n\tCandidate = \"CANDIDATE\",\n\tOffer = \"OFFER\",\n\tAnswer = \"ANSWER\",\n\tOpen = \"OPEN\", // The connection to the server is open.\n\tError = \"ERROR\", // Server error.\n\tIdTaken = \"ID-TAKEN\", // The selected ID is taken.\n\tInvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n\tLeave = \"LEAVE\", // Another peer has closed its connection to this peer.\n\tExpire = \"EXPIRE\", // The offer sent to a peer has expired without response.\n}\n","{\n\t\"name\": \"peerjs\",\n\t\"version\": \"1.4.0\",\n\t\"keywords\": [\n\t\t\"peerjs\",\n\t\t\"webrtc\",\n\t\t\"p2p\",\n\t\t\"rtc\"\n\t],\n\t\"description\": \"PeerJS client\",\n\t\"homepage\": \"https://peerjs.com\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/peers/peerjs/issues\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/peers/peerjs\"\n\t},\n\t\"license\": \"MIT\",\n\t\"contributors\": [\n\t\t\"Michelle Bu <michelle@michellebu.com>\",\n\t\t\"afrokick <devbyru@gmail.com>\",\n\t\t\"ericz <really.ez@gmail.com>\",\n\t\t\"Jairo <kidandcat@gmail.com>\",\n\t\t\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\n\t\t\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\n\t\t\"hc <hheennrryy@gmail.com>\",\n\t\t\"Muhammad Asif <capripio@gmail.com>\",\n\t\t\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\n\t\t\"Moritz Stückler <moritz.stueckler@gmail.com>\",\n\t\t\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\n\t\t\"akotynski <aleksanderkotbury@gmail.com>\",\n\t\t\"Jairooo <jairocaro@msn.com>\",\n\t\t\"lmb <i@lmb.io>\",\n\t\t\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\n\t\t\"Simon <crydotsnakegithub@gmail.com>\",\n\t\t\"Philipp Hancke <fippo@andyet.net>\",\n\t\t\"Matthias Lohr <matthias@lohr.me>\",\n\t\t\"Jess <jessachandler@gmail.com>\",\n\t\t\"khankuan <khankuan@gmail.com>\",\n\t\t\"Denis Lukov <denismassters@gmail.com>\",\n\t\t\"Hans Oksendahl <hansoksendahl@gmail.com>\",\n\t\t\"XiZhao <kwang1imsa@gmail.com>\",\n\t\t\"DUODVK <kurmanov.work@gmail.com>\",\n\t\t\"Sören Balko <Soeren.Balko@gmail.com>\",\n\t\t\"Steve Blaurock <sblaurock@gmail.com>\",\n\t\t\"Yemel Jardi <angel.jardi@gmail.com>\",\n\t\t\"Yuki Ito <yuki@gnnk.net>\",\n\t\t\"alxnull <alxnull@e.mail.de>\",\n\t\t\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\n\t\t\"chandika <chandika@gmail.com>\",\n\t\t\"eddieherm <edhermoso@gmail.com>\",\n\t\t\"emersion <contact@emersion.fr>\",\n\t\t\"fresheneesz <bitetrudpublic@gmail.com>\",\n\t\t\"jasonbarry <jasbarry@me.com>\",\n\t\t\"jonnyf <github@jonathanfoss.co.uk>\",\n\t\t\"=frank tree <=frnktrb@googlemail.com>\",\n\t\t\"xizhao <kevin.wang@cloudera.com>\",\n\t\t\"Alberto Torres <kungfoobar@gmail.com>\",\n\t\t\"Alex Chuev <alex@chuev.com>\",\n\t\t\"Andre Eckardt <aeckardt@outlook.com>\",\n\t\t\"Arpit Solanki <solankiarpit1997@gmail.com>\",\n\t\t\"Artur Zayats <zag2art@gmail.com>\",\n\t\t\"Ben Parnell <benjaminparnell.94@gmail.com>\",\n\t\t\"Benny Lichtner <bennlich@gmail.com>\",\n\t\t\"Chris Cowan <agentme49@gmail.com>\",\n\t\t\"Christopher Van <cvan@users.noreply.github.com>\",\n\t\t\"Diwank Singh Tomer <singh@diwank.name>\",\n\t\t\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\n\t\t\"Evandro Zanatta <ezanatta@tray.net.br>\",\n\t\t\"Gardner Bickford <gardner@users.noreply.github.com>\",\n\t\t\"Gian Luca <gianluca.cecchi@cynny.com>\",\n\t\t\"Hizkia Felix <hizkifw@gmail.com>\",\n\t\t\"Hristo Oskov <hristo.oskov@gmail.com>\",\n\t\t\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\n\t\t\"Isaac Madwed <i.madwed@gmail.com>\",\n\t\t\"Jefferson Felix <me@jsfelix.dev>\",\n\t\t\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\n\t\t\"Jonathan Mayol <mayoljonathan@gmail.com>\",\n\t\t\"JooYoung <qkdlql@naver.com>\",\n\t\t\"Jordan Austin <jrax86@gmail.com>\",\n\t\t\"Josh Hamit <josh.hamit@gmail.com>\",\n\t\t\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\n\t\t\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\n\t\t\"PatrickJS <github@gdi2290.com>\",\n\t\t\"Pepijn de Vos <pepijndevos@gmail.com>\",\n\t\t\"Rolf Erik Lekang <me@rolflekang.com>\"\n\t],\n\t\"funding\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"collective\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"files\": [\n\t\t\"dist/*\"\n\t],\n\t\"type\": \"module\",\n\t\"sideEffects\": [\n\t\t\"lib/global.ts\",\n\t\t\"lib/supports.ts\"\n\t],\n\t\"main\": \"dist/bundler.cjs\",\n\t\"browser-minified\": \"dist/peerjs.min.cjs\",\n\t\"browser-unminified\": \"dist/peerjs.cjs\",\n\t\"types\": \"dist/types.d.ts\",\n\t\"targets\": {\n\t\t\"types\": {\n\t\t\t\"source\": \"lib/exports.ts\"\n\t\t},\n\t\t\"main\": {\n\t\t\t\"source\": \"lib/exports.ts\"\n\t\t},\n\t\t\"browser-minified\": {\n\t\t\t\"includeNodeModules\": true,\n\t\t\t\"context\": \"browser\",\n\t\t\t\"optimize\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"cover 99%, not dead\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t},\n\t\t\"browser-unminified\": {\n\t\t\t\"includeNodeModules\": true,\n\t\t\t\"context\": \"browser\",\n\t\t\t\"optimize\": false,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"cover 99%, not dead\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t}\n\t},\n\t\"scripts\": {\n\t\t\"check\": \"tsc --noEmit\",\n\t\t\"watch\": \"parcel watch\",\n\t\t\"build\": \"rm -rf dist && parcel build && ln -s dist/peerjs.cjs dist/peerjs.js && ln -s dist/peerjs.min.cjs dist/peerjs.min.js\",\n\t\t\"prepublishOnly\": \"npm run build\",\n\t\t\"test\": \"mocha -r ts-node/register -r jsdom-global/register test/**/*.ts\",\n\t\t\"format\": \"prettier --write .\",\n\t\t\"semantic-release\": \"semantic-release\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@parcel/packager-ts\": \"^2.5.0\",\n\t\t\"@parcel/transformer-typescript-types\": \"^2.5.0\",\n\t\t\"@semantic-release/changelog\": \"^6.0.1\",\n\t\t\"@semantic-release/git\": \"^10.0.1\",\n\t\t\"@types/chai\": \"^4.3.0\",\n\t\t\"@types/mocha\": \"^9.1.0\",\n\t\t\"@types/node\": \"^17.0.18\",\n\t\t\"chai\": \"^4.3.6\",\n\t\t\"jsdom\": \"^19.0.0\",\n\t\t\"jsdom-global\": \"^3.0.2\",\n\t\t\"mocha\": \"^9.2.0\",\n\t\t\"mock-socket\": \"8.0.5\",\n\t\t\"parcel\": \"^2.5.0\",\n\t\t\"prettier\": \"^2.6.2\",\n\t\t\"semantic-release\": \"^19.0.2\",\n\t\t\"standard\": \"^16.0.4\",\n\t\t\"ts-node\": \"^10.5.0\",\n\t\t\"typescript\": \"^4.5.5\"\n\t},\n\t\"dependencies\": {\n\t\t\"eventemitter3\": \"^3.1.2\",\n\t\t\"peerjs-js-binarypack\": \"1.0.1\",\n\t\t\"webrtc-adapter\": \"^7.7.1\"\n\t}\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n\tConnectionType,\n\tConnectionEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport type { AnswerOption } from \"./optionInterfaces\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n\tprivate static readonly ID_PREFIX = \"mc_\";\n\n\tprivate _negotiator: Negotiator;\n\tprivate _localStream: MediaStream;\n\tprivate _remoteStream: MediaStream;\n\n\tget type() {\n\t\treturn ConnectionType.Media;\n\t}\n\n\tget localStream(): MediaStream {\n\t\treturn this._localStream;\n\t}\n\tget remoteStream(): MediaStream {\n\t\treturn this._remoteStream;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis._localStream = this.options._stream;\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tMediaConnection.ID_PREFIX + util.randomToken();\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tif (this._localStream) {\n\t\t\tthis._negotiator.startConnection({\n\t\t\t\t_stream: this._localStream,\n\t\t\t\toriginator: true,\n\t\t\t});\n\t\t}\n\t}\n\n\taddStream(remoteStream) {\n\t\tlogger.log(\"Receiving stream\", remoteStream);\n\n\t\tthis._remoteStream = remoteStream;\n\t\tsuper.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\t// Forward to negotiator\n\t\t\t\tthis._negotiator.handleSDP(type, payload.sdp);\n\t\t\t\tthis._open = true;\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tanswer(stream: MediaStream, options: AnswerOption = {}): void {\n\t\tif (this._localStream) {\n\t\t\tlogger.warn(\n\t\t\t\t\"Local stream already exists on this MediaConnection. Are you answering a call twice?\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._localStream = stream;\n\n\t\tif (options && options.sdpTransform) {\n\t\t\tthis.options.sdpTransform = options.sdpTransform;\n\t\t}\n\n\t\tthis._negotiator.startConnection({\n\t\t\t...this.options._payload,\n\t\t\t_stream: stream,\n\t\t});\n\t\t// Retrieve lost messages stored because PeerConnection not set up.\n\t\tconst messages = this.provider._getMessages(this.connectionId);\n\n\t\tfor (let message of messages) {\n\t\t\tthis.handleMessage(message);\n\t\t}\n\n\t\tthis._open = true;\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tthis._localStream = null;\n\t\tthis._remoteStream = null;\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.options && this.options._stream) {\n\t\t\tthis.options._stream = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(ConnectionEventType.Close);\n\t}\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tConnectionEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n\tconstructor(readonly connection: BaseConnection) {}\n\n\t/** Returns a PeerConnection object set up correctly (for data, media). */\n\tstartConnection(options: any) {\n\t\tconst peerConnection = this._startPeerConnection();\n\n\t\t// Set the connection's PC.\n\t\tthis.connection.peerConnection = peerConnection;\n\n\t\tif (this.connection.type === ConnectionType.Media && options._stream) {\n\t\t\tthis._addTracksToConnection(options._stream, peerConnection);\n\t\t}\n\n\t\t// What do we need to do now?\n\t\tif (options.originator) {\n\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\tconst dataConnection = <DataConnection>this.connection;\n\n\t\t\t\tconst config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n\t\t\t\tconst dataChannel = peerConnection.createDataChannel(\n\t\t\t\t\tdataConnection.label,\n\t\t\t\t\tconfig,\n\t\t\t\t);\n\t\t\t\tdataConnection.initialize(dataChannel);\n\t\t\t}\n\n\t\t\tthis._makeOffer();\n\t\t} else {\n\t\t\tthis.handleSDP(\"OFFER\", options.sdp);\n\t\t}\n\t}\n\n\t/** Start a PC. */\n\tprivate _startPeerConnection(): RTCPeerConnection {\n\t\tlogger.log(\"Creating RTCPeerConnection.\");\n\n\t\tconst peerConnection = new RTCPeerConnection(\n\t\t\tthis.connection.provider.options.config,\n\t\t);\n\n\t\tthis._setupListeners(peerConnection);\n\n\t\treturn peerConnection;\n\t}\n\n\t/** Set up various WebRTC listeners. */\n\tprivate _setupListeners(peerConnection: RTCPeerConnection) {\n\t\tconst peerId = this.connection.peer;\n\t\tconst connectionId = this.connection.connectionId;\n\t\tconst connectionType = this.connection.type;\n\t\tconst provider = this.connection.provider;\n\n\t\t// ICE CANDIDATES.\n\t\tlogger.log(\"Listening for ICE candidates.\");\n\n\t\tpeerConnection.onicecandidate = (evt) => {\n\t\t\tif (!evt.candidate || !evt.candidate.candidate) return;\n\n\t\t\tlogger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n\t\t\tprovider.socket.send({\n\t\t\t\ttype: ServerMessageType.Candidate,\n\t\t\t\tpayload: {\n\t\t\t\t\tcandidate: evt.candidate,\n\t\t\t\t\ttype: connectionType,\n\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t},\n\t\t\t\tdst: peerId,\n\t\t\t});\n\t\t};\n\n\t\tpeerConnection.oniceconnectionstatechange = () => {\n\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\tcase \"failed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is failed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\tConnectionEventType.Error,\n\t\t\t\t\t\tnew Error(\"Negotiation of connection to \" + peerId + \" failed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"closed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is closed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\tConnectionEventType.Error,\n\t\t\t\t\t\tnew Error(\"Connection to \" + peerId + \" closed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to disconnected on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tpeerConnection.onicecandidate = util.noop;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.connection.emit(\n\t\t\t\tConnectionEventType.IceStateChanged,\n\t\t\t\tpeerConnection.iceConnectionState,\n\t\t\t);\n\t\t};\n\n\t\t// DATACONNECTION.\n\t\tlogger.log(\"Listening for data channel\");\n\t\t// Fired between offer and answer, so options should already be saved\n\t\t// in the options hash.\n\t\tpeerConnection.ondatachannel = (evt) => {\n\t\t\tlogger.log(\"Received data channel\");\n\n\t\t\tconst dataChannel = evt.channel;\n\t\t\tconst connection = <DataConnection>(\n\t\t\t\tprovider.getConnection(peerId, connectionId)\n\t\t\t);\n\n\t\t\tconnection.initialize(dataChannel);\n\t\t};\n\n\t\t// MEDIACONNECTION.\n\t\tlogger.log(\"Listening for remote stream\");\n\n\t\tpeerConnection.ontrack = (evt) => {\n\t\t\tlogger.log(\"Received remote stream\");\n\n\t\t\tconst stream = evt.streams[0];\n\t\t\tconst connection = provider.getConnection(peerId, connectionId);\n\n\t\t\tif (connection.type === ConnectionType.Media) {\n\t\t\t\tconst mediaConnection = <MediaConnection>connection;\n\n\t\t\t\tthis._addStreamToMediaConnection(stream, mediaConnection);\n\t\t\t}\n\t\t};\n\t}\n\n\tcleanup(): void {\n\t\tlogger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n\t\tconst peerConnection = this.connection.peerConnection;\n\n\t\tif (!peerConnection) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.connection.peerConnection = null;\n\n\t\t//unsubscribe from all PeerConnection's events\n\t\tpeerConnection.onicecandidate =\n\t\t\tpeerConnection.oniceconnectionstatechange =\n\t\t\tpeerConnection.ondatachannel =\n\t\t\tpeerConnection.ontrack =\n\t\t\t\t() => {};\n\n\t\tconst peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n\t\tlet dataChannelNotClosed = false;\n\n\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\tconst dataConnection = <DataConnection>this.connection;\n\t\t\tconst dataChannel = dataConnection.dataChannel;\n\n\t\t\tif (dataChannel) {\n\t\t\t\tdataChannelNotClosed =\n\t\t\t\t\t!!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n\t\t\t}\n\t\t}\n\n\t\tif (peerConnectionNotClosed || dataChannelNotClosed) {\n\t\t\tpeerConnection.close();\n\t\t}\n\t}\n\n\tprivate async _makeOffer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst offer = await peerConnection.createOffer(\n\t\t\t\tthis.connection.options.constraints,\n\t\t\t);\n\n\t\t\tlogger.log(\"Created offer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\toffer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(offer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t\"Set localDescription:\",\n\t\t\t\t\toffer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tlet payload: any = {\n\t\t\t\t\tsdp: offer,\n\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\tmetadata: this.connection.metadata,\n\t\t\t\t\tbrowser: util.browser,\n\t\t\t\t};\n\n\t\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = <DataConnection>this.connection;\n\n\t\t\t\t\tpayload = {\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t\tlabel: dataConnection.label,\n\t\t\t\t\t\treliable: dataConnection.reliable,\n\t\t\t\t\t\tserialization: dataConnection.serialization,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Offer,\n\t\t\t\t\tpayload,\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\t// TODO: investigate why _makeOffer is being called from the answer\n\t\t\t\tif (\n\t\t\t\t\terr !=\n\t\t\t\t\t\"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n\t\t\t\t) {\n\t\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to createOffer, \", err_1);\n\t\t}\n\t}\n\n\tprivate async _makeAnswer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst answer = await peerConnection.createAnswer();\n\t\t\tlogger.log(\"Created answer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\tanswer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(answer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t`Set localDescription:`,\n\t\t\t\t\tanswer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Answer,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tsdp: answer,\n\t\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\t\tbrowser: util.browser,\n\t\t\t\t\t},\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to create answer, \", err_1);\n\t\t}\n\t}\n\n\t/** Handle an SDP. */\n\tasync handleSDP(type: string, sdp: any): Promise<void> {\n\t\tsdp = new RTCSessionDescription(sdp);\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\tlogger.log(\"Setting remote description\", sdp);\n\n\t\tconst self = this;\n\n\t\ttry {\n\t\t\tawait peerConnection.setRemoteDescription(sdp);\n\t\t\tlogger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n\t\t\tif (type === \"OFFER\") {\n\t\t\t\tawait self._makeAnswer();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to setRemoteDescription, \", err);\n\t\t}\n\t}\n\n\t/** Handle a candidate. */\n\tasync handleCandidate(ice: any): Promise<void> {\n\t\tlogger.log(`handleCandidate:`, ice);\n\n\t\tconst candidate = ice.candidate;\n\t\tconst sdpMLineIndex = ice.sdpMLineIndex;\n\t\tconst sdpMid = ice.sdpMid;\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tawait peerConnection.addIceCandidate(\n\t\t\t\tnew RTCIceCandidate({\n\t\t\t\t\tsdpMid: sdpMid,\n\t\t\t\t\tsdpMLineIndex: sdpMLineIndex,\n\t\t\t\t\tcandidate: candidate,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tlogger.log(`Added ICE candidate for:${this.connection.peer}`);\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to handleCandidate, \", err);\n\t\t}\n\t}\n\n\tprivate _addTracksToConnection(\n\t\tstream: MediaStream,\n\t\tpeerConnection: RTCPeerConnection,\n\t): void {\n\t\tlogger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n\t\tif (!peerConnection.addTrack) {\n\t\t\treturn logger.error(\n\t\t\t\t`Your browser does't support RTCPeerConnection#addTrack. Ignored.`,\n\t\t\t);\n\t\t}\n\n\t\tstream.getTracks().forEach((track) => {\n\t\t\tpeerConnection.addTrack(track, stream);\n\t\t});\n\t}\n\n\tprivate _addStreamToMediaConnection(\n\t\tstream: MediaStream,\n\t\tmediaConnection: MediaConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`,\n\t\t);\n\n\t\tmediaConnection.addStream(stream);\n\t}\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n\tprotected _open = false;\n\n\treadonly metadata: any;\n\tconnectionId: string;\n\n\tpeerConnection: RTCPeerConnection;\n\n\tabstract get type(): ConnectionType;\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tconstructor(\n\t\treadonly peer: string,\n\t\tpublic provider: Peer,\n\t\treadonly options: any,\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = options.metadata;\n\t}\n\n\tabstract close(): void;\n\n\tabstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n\tConnectionType,\n\tConnectionEventType,\n\tSerializationType,\n\tServerMessageType,\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from \"./encodingQueue\";\nimport type { DataConnection as IDataConnection } from \"./dataconnection\";\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n\tprivate static readonly ID_PREFIX = \"dc_\";\n\tprivate static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n\tprivate _negotiator: Negotiator;\n\treadonly label: string;\n\treadonly serialization: SerializationType;\n\treadonly reliable: boolean;\n\tstringify: (data: any) => string = JSON.stringify;\n\tparse: (data: string) => any = JSON.parse;\n\n\tget type() {\n\t\treturn ConnectionType.Data;\n\t}\n\n\tprivate _buffer: any[] = [];\n\tprivate _bufferSize = 0;\n\tprivate _buffering = false;\n\tprivate _chunkedData: {\n\t\t[id: number]: {\n\t\t\tdata: Blob[];\n\t\t\tcount: number;\n\t\t\ttotal: number;\n\t\t};\n\t} = {};\n\n\tprivate _dc: RTCDataChannel;\n\tprivate _encodingQueue = new EncodingQueue();\n\n\tget dataChannel(): RTCDataChannel {\n\t\treturn this._dc;\n\t}\n\n\tget bufferSize(): number {\n\t\treturn this._bufferSize;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tDataConnection.ID_PREFIX + util.randomToken();\n\n\t\tthis.label = this.options.label || this.connectionId;\n\t\tthis.serialization = this.options.serialization || SerializationType.Binary;\n\t\tthis.reliable = !!this.options.reliable;\n\n\t\tthis._encodingQueue.on(\"done\", (ab: ArrayBuffer) => {\n\t\t\tthis._bufferedSend(ab);\n\t\t});\n\n\t\tthis._encodingQueue.on(\"error\", () => {\n\t\t\tlogger.error(\n\t\t\t\t`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`,\n\t\t\t);\n\t\t\tthis.close();\n\t\t});\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tthis._negotiator.startConnection(\n\t\t\tthis.options._payload || {\n\t\t\t\toriginator: true,\n\t\t\t},\n\t\t);\n\t}\n\n\t/** Called by the Negotiator when the DataChannel is ready. */\n\tinitialize(dc: RTCDataChannel): void {\n\t\tthis._dc = dc;\n\t\tthis._configureDataChannel();\n\t}\n\n\tprivate _configureDataChannel(): void {\n\t\tif (!util.supports.binaryBlob || util.supports.reliable) {\n\t\t\tthis.dataChannel.binaryType = \"arraybuffer\";\n\t\t}\n\n\t\tthis.dataChannel.onopen = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc connection success`);\n\t\t\tthis._open = true;\n\t\t\tthis.emit(ConnectionEventType.Open);\n\t\t};\n\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n\t\t\tthis._handleDataMessage(e);\n\t\t};\n\n\t\tthis.dataChannel.onclose = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n\t\t\tthis.close();\n\t\t};\n\t}\n\n\t// Handles a DataChannel message.\n\tprivate _handleDataMessage({\n\t\tdata,\n\t}: {\n\t\tdata: Blob | ArrayBuffer | string;\n\t}): void {\n\t\tconst datatype = data.constructor;\n\n\t\tconst isBinarySerialization =\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8;\n\n\t\tlet deserializedData: any = data;\n\n\t\tif (isBinarySerialization) {\n\t\t\tif (datatype === Blob) {\n\t\t\t\t// Datatype should never be blob\n\t\t\t\tutil.blobToArrayBuffer(data as Blob, (ab) => {\n\t\t\t\t\tconst unpackedData = util.unpack(ab);\n\t\t\t\t\tthis.emit(ConnectionEventType.Data, unpackedData);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (datatype === ArrayBuffer) {\n\t\t\t\tdeserializedData = util.unpack(data as ArrayBuffer);\n\t\t\t} else if (datatype === String) {\n\t\t\t\t// String fallback for binary data for browsers that don't support binary yet\n\t\t\t\tconst ab = util.binaryStringToArrayBuffer(data as string);\n\t\t\t\tdeserializedData = util.unpack(ab);\n\t\t\t}\n\t\t} else if (this.serialization === SerializationType.JSON) {\n\t\t\tdeserializedData = this.parse(data as string);\n\t\t}\n\n\t\t// Check if we've chunked--if so, piece things back together.\n\t\t// We're guaranteed that this isn't 0.\n\t\tif (deserializedData.__peerData) {\n\t\t\tthis._handleChunk(deserializedData);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.emit(ConnectionEventType.Data, deserializedData);\n\t}\n\n\tprivate _handleChunk(data: {\n\t\t__peerData: number;\n\t\tn: number;\n\t\ttotal: number;\n\t\tdata: Blob;\n\t}): void {\n\t\tconst id = data.__peerData;\n\t\tconst chunkInfo = this._chunkedData[id] || {\n\t\t\tdata: [],\n\t\t\tcount: 0,\n\t\t\ttotal: data.total,\n\t\t};\n\n\t\tchunkInfo.data[data.n] = data.data;\n\t\tchunkInfo.count++;\n\t\tthis._chunkedData[id] = chunkInfo;\n\n\t\tif (chunkInfo.total === chunkInfo.count) {\n\t\t\t// Clean up before making the recursive call to `_handleDataMessage`.\n\t\t\tdelete this._chunkedData[id];\n\n\t\t\t// We've received all the chunks--time to construct the complete data.\n\t\t\tconst data = new Blob(chunkInfo.data);\n\t\t\tthis._handleDataMessage({ data });\n\t\t}\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tthis._buffer = [];\n\t\tthis._bufferSize = 0;\n\t\tthis._chunkedData = {};\n\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.dataChannel) {\n\t\t\tthis.dataChannel.onopen = null;\n\t\t\tthis.dataChannel.onmessage = null;\n\t\t\tthis.dataChannel.onclose = null;\n\t\t\tthis._dc = null;\n\t\t}\n\n\t\tif (this._encodingQueue) {\n\t\t\tthis._encodingQueue.destroy();\n\t\t\tthis._encodingQueue.removeAllListeners();\n\t\t\tthis._encodingQueue = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(ConnectionEventType.Close);\n\t}\n\n\t/** Allows user to send data. */\n\tsend(data: any, chunked?: boolean): void {\n\t\tif (!this.open) {\n\t\t\tsuper.emit(\n\t\t\t\tConnectionEventType.Error,\n\t\t\t\tnew Error(\n\t\t\t\t\t\"Connection is not open. You should listen for the `open` event before sending messages.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.serialization === SerializationType.JSON) {\n\t\t\tthis._bufferedSend(this.stringify(data));\n\t\t} else if (\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8\n\t\t) {\n\t\t\tconst blob = util.pack(data);\n\n\t\t\tif (!chunked && blob.size > util.chunkedMTU) {\n\t\t\t\tthis._sendChunks(blob);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!util.supports.binaryBlob) {\n\t\t\t\t// We only do this if we really need to (e.g. blobs are not supported),\n\t\t\t\t// because this conversion is costly.\n\t\t\t\tthis._encodingQueue.enque(blob);\n\t\t\t} else {\n\t\t\t\tthis._bufferedSend(blob);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedSend(data);\n\t\t}\n\t}\n\n\tprivate _bufferedSend(msg: any): void {\n\t\tif (this._buffering || !this._trySend(msg)) {\n\t\t\tthis._buffer.push(msg);\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t}\n\t}\n\n\t// Returns true if the send succeeds.\n\tprivate _trySend(msg: any): boolean {\n\t\tif (!this.open) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n\t\t\tthis._buffering = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._buffering = false;\n\t\t\t\tthis._tryBuffer();\n\t\t\t}, 50);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.dataChannel.send(msg);\n\t\t} catch (e) {\n\t\t\tlogger.error(`DC#:${this.connectionId} Error when sending:`, e);\n\t\t\tthis._buffering = true;\n\n\t\t\tthis.close();\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Try to send the first message in the buffer.\n\tprivate _tryBuffer(): void {\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msg = this._buffer[0];\n\n\t\tif (this._trySend(msg)) {\n\t\t\tthis._buffer.shift();\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t\tthis._tryBuffer();\n\t\t}\n\t}\n\n\tprivate _sendChunks(blob: Blob): void {\n\t\tconst blobs = util.chunk(blob);\n\t\tlogger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n\t\tfor (let blob of blobs) {\n\t\t\tthis.send(blob, true);\n\t\t}\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\tthis._negotiator.handleSDP(message.type, payload.sdp);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\n\t\t\t\t\t\"Unrecognized message type:\",\n\t\t\t\t\tmessage.type,\n\t\t\t\t\t\"from peer:\",\n\t\t\t\t\tthis.peer,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n\treadonly fileReader: FileReader = new FileReader();\n\n\tprivate _queue: Blob[] = [];\n\tprivate _processing: boolean = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.fileReader.onload = (evt) => {\n\t\t\tthis._processing = false;\n\n\t\t\tif (evt.target) {\n\t\t\t\tthis.emit(\"done\", evt.target.result as ArrayBuffer);\n\t\t\t}\n\n\t\t\tthis.doNextTask();\n\t\t};\n\n\t\tthis.fileReader.onerror = (evt) => {\n\t\t\tlogger.error(`EncodingQueue error:`, evt);\n\t\t\tthis._processing = false;\n\t\t\tthis.destroy();\n\t\t\tthis.emit(\"error\", evt);\n\t\t};\n\t}\n\n\tget queue(): Blob[] {\n\t\treturn this._queue;\n\t}\n\n\tget size(): number {\n\t\treturn this.queue.length;\n\t}\n\n\tget processing(): boolean {\n\t\treturn this._processing;\n\t}\n\n\tenque(blob: Blob): void {\n\t\tthis.queue.push(blob);\n\n\t\tif (this.processing) return;\n\n\t\tthis.doNextTask();\n\t}\n\n\tdestroy(): void {\n\t\tthis.fileReader.abort();\n\t\tthis._queue = [];\n\t}\n\n\tprivate doNextTask(): void {\n\t\tif (this.size === 0) return;\n\t\tif (this.processing) return;\n\n\t\tthis._processing = true;\n\n\t\tthis.fileReader.readAsArrayBuffer(this.queue.shift());\n\t}\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { PeerJSOption } from \"./optionInterfaces\";\nimport { version } from \"../package.json\";\n\nexport class API {\n\tconstructor(private readonly _options: PeerJSOption) {}\n\n\tprivate _buildRequest(method: string): Promise<Response> {\n\t\tconst protocol = this._options.secure ? \"https\" : \"http\";\n\t\tconst { host, port, path, key } = this._options;\n\t\tconst url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n\t\t// TODO: Why timestamp, why random?\n\t\turl.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n\t\turl.searchParams.set(\"version\", version);\n\t\treturn fetch(url.href, {\n\t\t\treferrerPolicy: \"strict-origin-when-cross-origin\",\n\t\t});\n\t}\n\n\t/** Get a unique ID from the server via XHR and initialize with it. */\n\tasync retrieveId(): Promise<string> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"id\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.text();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving ID\", error);\n\n\t\t\tlet pathError = \"\";\n\n\t\t\tif (\n\t\t\t\tthis._options.path === \"/\" &&\n\t\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t\t) {\n\t\t\t\tpathError =\n\t\t\t\t\t\" If you passed in a `path` to your self-hosted PeerServer, \" +\n\t\t\t\t\t\"you'll also need to pass in that same path when creating a new \" +\n\t\t\t\t\t\"Peer.\";\n\t\t\t}\n\n\t\t\tthrow new Error(\"Could not get an ID from the server.\" + pathError);\n\t\t}\n\t}\n\n\t/** @deprecated */\n\tasync listAllPeers(): Promise<any[]> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"peers\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\tlet helpfulError = \"\";\n\n\t\t\t\t\tif (this._options.host === util.CLOUD_HOST) {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"It looks like you're using the cloud server. You can email \" +\n\t\t\t\t\t\t\t\"team@peerjs.com to enable peer listing for your API key.\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"You need to enable `allow_discovery` on your self-hosted \" +\n\t\t\t\t\t\t\t\"PeerServer to use this feature.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"It doesn't look like you have permission to list peers IDs. \" +\n\t\t\t\t\t\t\thelpfulError,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.json();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving list peers\", error);\n\n\t\t\tthrow new Error(\"Could not get list peers from the server.\" + error);\n\t\t}\n\t}\n}\n"],"names":[],"version":3,"file":"bundler.cjs.map"}